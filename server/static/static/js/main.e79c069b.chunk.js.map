{"version":3,"sources":["utils/constants.ts","history.ts","utils/processModifiers.ts","components/Icon/Icon.tsx","store/reducers/commonReducer.ts","components/Button/Button.tsx","components/WithoutConfiguration/WithoutConfiguration.tsx","store/actions/commonActions.ts","types/store/commonTypes.ts","store/actions/buildsActions.ts","types/store/buildsTypes.ts","store/reducers/buildsReducer.ts","components/Header/Header.tsx","pages/IndexPage/IndexPage.tsx","store/actions/settingsActions.ts","types/store/settingsTypes.ts","components/Input/Input.tsx","store/reducers/settingsReducer.ts","components/Form/Form.tsx","pages/SettingsPage/SettingsPage.tsx","components/Card/Card.tsx","components/BuildList/BuildList.tsx","pages/BuildHistoryPage/BuildHistoryPage.tsx","components/BuildLog/BuildLog.tsx","components/Loader/Loader.tsx","components/BuildDetails/BuildDetails.tsx","pages/BuildDetailsPage/BuildDetailsPage.tsx","components/NotFound/NotFound.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Footer/Footer.tsx","components/Popup/Popup.tsx","App.tsx","serviceWorker.js","store/reducers/index.ts","store/store.ts","index.tsx"],"names":["createBrowserHistory","blockName","modifiers","map","modifierName","modifierValue","undefined","includes","join","Icon","props","className","onClick","processModifiers","defaultState","isInProgress","isAppLoading","isPopupActive","getIsInProgress","state","common","getIsAppLoading","getIsPopupActive","Button","text","iconType","type","useSelector","WithoutConfiguration","actionFn","toggleProgress","payload","togglePopup","fetchBuilds","params","errorsCount","dispatch","requestUrl","URL","constants","search","URLSearchParams","toString","console","log","fetch","then","res","json","a","data","error","Promise","r","setTimeout","fetchDetails","buildId","isNeedDispatchInEnd","history","push","fetchLog","startNewBuild","commitHash","method","id","details","newBuildId","getBuildsData","builds","getDetails","getLog","getNewBuildId","Header","title","buttons","useDispatch","length","buttonProps","buttonKey","onClickFn","rebuild","key","IndexPage","useEffect","document","saveSettings","config","headers","body","JSON","stringify","goBack","fetchSettings","Input","labelBefore","labelAfter","placeholder","name","required","inputMode","value","pattern","forwardRef","isClearButtonVisible","filter","useState","valueFromState","setValueFromState","htmlFor","onChange","event","target","ref","getSettingsConfig","settings","getRepositoryName","repoName","getBuildCommand","buildCommand","getMainBranch","mainBranch","getPeriod","period","Form","repositoryNameRef","useRef","buildCommandRef","mainBranchRef","periodRef","repositoryName","handleSubmit","preventDefault","current","onSubmit","SettingsPage","Card","buildNumber","commitMessage","branchName","authorName","status","start","duration","to","full","short","formattedDate","setFormattedDate","split","rawDate","rawTime","monthsNames","year","monthNumber","day","hour","minutes","monthName","formatDate","formattedDuration","setFormattedDuration","ellipseStr","str","maxLength","slice","hours","Math","floor","hoursStr","minutesStr","formatBuildTime","formattedBranchName","setFormattedBranchName","formattedAuthorName","setFormattedAuthorName","formattedCommitHash","setFormattedCommitHash","CardTag","Link","BuildList","buildsData","limit","onShowMoreClick","useCallback","fetchMoreBuilds","offset","correctStatus","BuildHistoryPage","settingsConfig","BuildLog","logString","dangerouslySetInnerHTML","__html","Loader","BuildDetails","useParams","logStringHtml","setLogStringHtml","convert","Convert","fg","bg","some","buildData","all","detailsData","logData","fetchBuildDetailsAndLog","toHtml","setCorrectStatus","correct","BuildDetailsPage","NotFound","NotFoundPage","Footer","Popup","commitHashRef","trim","App","isFetching","settingsData","root","getElementById","classList","add","remove","exact","path","render","location","pathname","from","Boolean","window","hostname","match","rootReducer","combineReducers","action","lastBuild","lastBuildNumber","correctLastNewBuilds","i","middlewares","thunk","middlewareEnhancer","applyMiddleware","store","createStore","composeWithDevTools","rootElement","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e79c069b.chunk.js","sourcesContent":["export default {\n  GO_TO_SETTINGS: \"GO_TO_SETTINGS\",\n  RUN_BUILD: \"RUN_BUILD\",\n  REBUILD: \"REBUILD\",\n\n  SITE_NAME: \"School CI server\",\n  SERVER_API: \"http://localhost:9999/api\",\n};\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","export default (\n  blockName = \"\",\n  modifiers: Array<Array<string | undefined | false | null>> = []\n) =>\n  modifiers\n    .map(\n      ([modifierName, modifierValue]) =>\n        `${blockName}_${modifierName}${\n          [undefined, false, null, \"\"].includes(modifierValue)\n            ? \"\"\n            : `_${modifierValue}`\n        }`\n    )\n    .join(\" \");\n","import React from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Icon.scss\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface IconProps extends DefaultProps {\n  onClick?: React.DOMAttributes<HTMLDivElement>[\"onClick\"];\n}\n\nfunction Icon(props: IconProps) {\n  const blockName = \"Icon\";\n  const { className = \"\", modifiers = [], onClick } = props;\n\n  return (\n    <div\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n      onClick={onClick}\n    />\n  );\n}\n\nexport default Icon;\n","import { AppState } from \".\";\nimport {\n  CommonState,\n  CommonActionTypes,\n  TOGGLE_PROGRESS,\n  APP_LOADING,\n  POPUP,\n} from \"../../types/store/commonTypes\";\n\nconst defaultState: CommonState = {\n  isInProgress: false,\n  isAppLoading: true,\n  isPopupActive: false,\n};\n\nexport default function (state = defaultState, action: CommonActionTypes) {\n  switch (action.type) {\n    case TOGGLE_PROGRESS:\n      return {\n        ...state,\n        isInProgress: action.payload,\n      };\n    case APP_LOADING:\n      return {\n        ...state,\n        isAppLoading: action.payload,\n      };\n    case POPUP:\n      return {\n        ...state,\n        isPopupActive: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getIsInProgress = (state: AppState) => state.common.isInProgress;\nexport const getIsAppLoading = (state: AppState) => state.common.isAppLoading;\nexport const getIsPopupActive = (state: AppState) => state.common.isPopupActive;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Icon from \"../Icon/Icon\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Button.scss\";\nimport { DefaultProps } from \"../../types/defaultProps\";\nimport { getIsInProgress } from \"../../store/reducers/commonReducer\";\n\nexport interface ButtonProps extends DefaultProps {\n  text?: string | null;\n  onClick?: { (): void };\n  iconType?: string | null;\n  type?: \"button\" | \"submit\" | \"reset\";\n}\n\nfunction Button(props: ButtonProps) {\n  const blockName = \"Button\";\n  const {\n    className = \"\",\n    modifiers = [],\n    onClick = () => {},\n    text = null,\n    iconType = null,\n    type = \"button\",\n  } = props;\n\n  const isInProgress = useSelector(getIsInProgress);\n\n  return (\n    <button\n      type={type}\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )} ${isInProgress ? `${blockName}_disabled` : \"\"}`}\n      onClick={onClick}\n    >\n      {iconType && (\n        <Icon\n          className={`${blockName}-Icon`}\n          modifiers={[[\"type\", iconType]]}\n        />\n      )}\n      {text && <div className={`${blockName}-Text`}>{text}</div>}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../../components/Button/Button\";\nimport Icon from \"../../components/Icon/Icon\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./WithoutConfiguration.scss\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface WithoutConfigurationProps extends DefaultProps {\n  actionFn?: () => void;\n}\n\nfunction WithoutConfiguration(props: WithoutConfigurationProps) {\n  const blockName = \"WithoutConfiguration\";\n  const { className = \"\", modifiers = [], actionFn } = props;\n\n  return (\n    <main\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        <Icon\n          className={`${blockName}-Logo`}\n          modifiers={[[\"type\", \"settingsLogo\"]]}\n        />\n        <div className={`${blockName}-Description Text`}>\n          Configure repository connection and synchronization settings\n        </div>\n        <Button\n          className={`${blockName}-Button`}\n          modifiers={[[\"color\", \"accent\"]]}\n          onClick={actionFn}\n          text=\"Open settings\"\n        />\n      </div>\n    </main>\n  );\n}\n\nexport default WithoutConfiguration;\n","import {\n  CommonState,\n  TOGGLE_PROGRESS,\n  APP_LOADING,\n  POPUP,\n} from \"../../types/store/commonTypes\";\n\nexport const toggleProgress = (isInProgress: CommonState[\"isInProgress\"]) => ({\n  type: TOGGLE_PROGRESS,\n  payload: isInProgress,\n});\n\nexport const toggleAppLoading = (\n  isAppLoading: CommonState[\"isAppLoading\"]\n) => ({\n  type: APP_LOADING,\n  payload: isAppLoading,\n});\n\nexport const togglePopup = (isPopupActive: CommonState[\"isPopupActive\"]) => ({\n  type: POPUP,\n  payload: isPopupActive,\n});\n","// Describing the shape of the system's slice of state\nexport interface CommonState {\n  isInProgress: boolean;\n  isAppLoading: boolean;\n  isPopupActive: boolean;\n}\n\n// Describing the different ACTION NAMES available\nexport const TOGGLE_PROGRESS = \"TOGGLE_PROGRESS\";\nexport const POPUP = \"POPUP\";\nexport const APP_LOADING = \"APP_LOADING\";\n\ninterface ToggleProgressAction {\n  type: typeof TOGGLE_PROGRESS;\n  payload: CommonState[\"isInProgress\"];\n}\n\ninterface PopupAction {\n  type: typeof POPUP;\n  payload: CommonState[\"isPopupActive\"];\n}\n\ninterface AppLoadingAction {\n  type: typeof APP_LOADING;\n  payload: CommonState[\"isAppLoading\"];\n}\n\nexport type CommonActionTypes =\n  | ToggleProgressAction\n  | PopupAction\n  | AppLoadingAction;\n","import constants from \"../../utils/constants\";\nimport history from \"../../history\";\nimport { togglePopup, toggleProgress } from \"./commonActions\";\nimport {\n  DETAILS_BUILD,\n  FETCH_MORE_BUILDS,\n  FETCH_BUILDS,\n  LOG_BUILD,\n  NEW_BUILD_ID,\n} from \"../../types/store/buildsTypes\";\nimport {\n  BuildModel,\n  BuildModelArrayHomeworkApiRequest,\n} from \"../../../../server/typings/api\";\nimport { Dispatch, Action } from \"redux\";\n\nexport const fetchBuilds = (\n  params: BuildModelArrayHomeworkApiRequest,\n  errorsCount = 0\n) => (dispatch: Dispatch): Action | Promise<any> => {\n  const requestUrl = new URL(`${constants.SERVER_API}/builds`);\n  requestUrl.search = new URLSearchParams(params as string[][]).toString();\n  console.log(\"fetchBuilds: \", requestUrl);\n  return fetch((requestUrl as unknown) as string)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchBuilds(params, errorsCount)(dispatch);\n        }\n      } else {\n        dispatch({\n          type: FETCH_BUILDS,\n          payload: data,\n        });\n      }\n    });\n};\n\nexport const fetchMoreBuilds = (\n  params: BuildModelArrayHomeworkApiRequest,\n  errorsCount = 0\n) => (dispatch: Dispatch): Action | Promise<any> => {\n  dispatch(toggleProgress(true));\n\n  const requestUrl = new URL(`${constants.SERVER_API}/builds`);\n  requestUrl.search = new URLSearchParams(params as string[][]).toString();\n  console.log(\"fetchMoreBuilds: \", requestUrl);\n  return fetch((requestUrl as unknown) as string)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchMoreBuilds(params, errorsCount)(dispatch);\n        }\n      } else {\n        dispatch({\n          type: FETCH_MORE_BUILDS,\n          payload: data,\n        });\n      }\n\n      dispatch(toggleProgress(false));\n    });\n};\n\nexport const fetchDetails = (\n  buildId: BuildModel[\"id\"],\n  errorsCount = 0,\n  isNeedDispatchInEnd = false\n) => (dispatch: Dispatch): Action | Promise<any> => {\n  console.log(\"fetchDetails: \", buildId);\n  return fetch(`${constants.SERVER_API}/builds/${buildId}`)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchDetails(\n            buildId,\n            errorsCount,\n            isNeedDispatchInEnd\n          )(dispatch);\n        }\n\n        if (isNeedDispatchInEnd) {\n          // if wrong buildId passed need to redirect on / page\n          history.push(\"/\");\n        }\n\n        return null;\n      }\n\n      if (isNeedDispatchInEnd) {\n        dispatch({\n          type: DETAILS_BUILD,\n          payload: data,\n        });\n      } else {\n        return data;\n      }\n    });\n};\n\nexport const fetchLog = (\n  buildId: BuildModel[\"id\"],\n  errorsCount = 0,\n  isNeedDispatchInEnd = false\n) => (dispatch: Dispatch): Action | Promise<any> => {\n  console.log(\"fetchLog: \", buildId);\n  return fetch(`${constants.SERVER_API}/builds/${buildId}/logs`)\n    .then((res) => res.json())\n    .then(async (data) => {\n      if (data.error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchLog(buildId, errorsCount, isNeedDispatchInEnd)(dispatch);\n        }\n\n        if (isNeedDispatchInEnd) {\n          // if wrong buildId passed need to redirect on / page\n          history.push(\"/\");\n        }\n\n        return null;\n      }\n\n      if (isNeedDispatchInEnd) {\n        dispatch({\n          type: LOG_BUILD,\n          payload: data,\n        });\n      } else {\n        return data;\n      }\n    });\n};\n\nexport const fetchBuildDetailsAndLog = (buildId: BuildModel[\"id\"]) => async (\n  dispatch: Dispatch\n): Promise<any> => {\n  dispatch(toggleProgress(true));\n\n  const [detailsData, logData] = await Promise.all([\n    fetchDetails(buildId)(dispatch),\n    fetchLog(buildId)(dispatch),\n  ]);\n\n  if (logData === null || detailsData === null) {\n    dispatch(toggleProgress(false));\n    // if wrong buildId passed need to redirect on / page\n    history.push(\"/\");\n    return null;\n  }\n\n  dispatch({\n    type: LOG_BUILD,\n    payload: logData,\n  });\n  dispatch({\n    type: DETAILS_BUILD,\n    payload: detailsData,\n  });\n  dispatch(toggleProgress(false));\n};\n\nexport const startNewBuild = (commitHash = \"\", errorsCount = 0) => (\n  dispatch: Dispatch\n): Action | Promise<any> => {\n  console.log(\"try to add build by commit: \", commitHash);\n  dispatch(toggleProgress(true));\n\n  return fetch(`${constants.SERVER_API}/builds/${commitHash}`, {\n    method: \"POST\",\n  })\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return startNewBuild(commitHash, errorsCount)(dispatch);\n        }\n\n        dispatch(toggleProgress(false));\n        dispatch(togglePopup(false));\n        return null;\n      }\n\n      dispatch({\n        type: DETAILS_BUILD,\n        payload: {},\n      });\n      dispatch({\n        type: NEW_BUILD_ID,\n        payload: data.id,\n      });\n      dispatch(toggleProgress(false));\n      dispatch(togglePopup(false));\n      // переход на страницу деталей по только что добавленному новому билду\n      history.push(`/build/${data.id}`);\n    });\n};\n\nexport const rebuild = (commitHash = \"\", errorsCount = 0) => (\n  dispatch: Dispatch\n): Action | Promise<any> => {\n  console.log(\"try to rebuild build by commit: \", commitHash);\n  dispatch(toggleProgress(true));\n\n  return fetch(`${constants.SERVER_API}/builds/${commitHash}`, {\n    method: \"POST\",\n  })\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return rebuild(commitHash, errorsCount)(dispatch);\n        }\n\n        dispatch(toggleProgress(false));\n        return null;\n      }\n\n      dispatch({\n        type: DETAILS_BUILD,\n        payload: {},\n      });\n      dispatch({\n        type: NEW_BUILD_ID,\n        payload: data.id,\n      });\n      dispatch(toggleProgress(false));\n      // переход на страницу деталей по только что добавленному новому билду\n      history.push(`/build/${data.id}`);\n    });\n};\n","import { BuildModel } from \"../../../../server/typings/buildModel\";\n\nexport const FETCH_BUILDS = \"FETCH_BUILDS\";\nexport const FETCH_MORE_BUILDS = \"FETCH_MORE_BUILDS\";\nexport const DETAILS_BUILD = \"DETAILS_BUILD\";\nexport const LOG_BUILD = \"LOG_BUILD\";\nexport const NEW_BUILD_ID = \"NEW_BUILD_ID\";\n\n// Describing the shape of the system's slice of state\nexport interface BuildsState {\n  data: BuildModel[];\n  details: BuildModel | null;\n  log: string | null;\n  newBuildId: BuildModel[\"id\"] | null;\n}\n\ninterface FetchBuildsAction {\n  type: typeof FETCH_BUILDS;\n  payload: BuildModel[];\n}\n\ninterface FetchMoreBuildsAction {\n  type: typeof FETCH_MORE_BUILDS;\n  payload: BuildModel[];\n}\n\ninterface DetailsBuildAction {\n  type: typeof DETAILS_BUILD;\n  payload: BuildModel;\n}\n\ninterface LogBuildAction {\n  type: typeof LOG_BUILD;\n  payload: string;\n}\n\ninterface NewBuildIdAction {\n  type: typeof NEW_BUILD_ID;\n  payload: BuildModel[\"id\"];\n}\n\nexport type BuildsActionTypes =\n  | FetchBuildsAction\n  | FetchMoreBuildsAction\n  | DetailsBuildAction\n  | LogBuildAction\n  | NewBuildIdAction;\n","import {\n  BuildsState,\n  BuildsActionTypes,\n  FETCH_BUILDS,\n  FETCH_MORE_BUILDS,\n  DETAILS_BUILD,\n  LOG_BUILD,\n  NEW_BUILD_ID,\n} from \"../../types/store/buildsTypes\";\nimport { AppState } from \".\";\n\nconst defaultState: BuildsState = {\n  data: [],\n  details: null,\n  log: null,\n  newBuildId: null,\n};\n\nexport default function (\n  state = defaultState,\n  action: BuildsActionTypes\n): BuildsState {\n  switch (action.type) {\n    case FETCH_BUILDS:\n      return {\n        ...state,\n        data: [...action.payload],\n      };\n    case FETCH_MORE_BUILDS:\n      const lastBuild = state.data[state.data.length - 1];\n      const lastBuildNumber = lastBuild ? lastBuild.buildNumber : -1;\n\n      const correctLastNewBuilds = [];\n      for (let i = 0; i < action.payload.length; i++) {\n        if (action.payload[i].buildNumber >= lastBuildNumber) continue;\n\n        correctLastNewBuilds.push(action.payload[i]);\n      }\n      return {\n        ...state,\n        data: [...state.data, ...correctLastNewBuilds],\n      };\n    case DETAILS_BUILD:\n      return {\n        ...state,\n        details: {\n          ...action.payload,\n        },\n      };\n    case LOG_BUILD:\n      return {\n        ...state,\n        log: action.payload,\n      };\n    case NEW_BUILD_ID:\n      return {\n        ...state,\n        newBuildId: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getBuildsData = (state: AppState) => state.builds.data;\nexport const getDetails = (state: AppState) => state.builds.details;\nexport const getLog = (state: AppState) => state.builds.log;\nexport const getNewBuildId = (state: AppState) => state.builds.newBuildId;\n","import React from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport Button from \"../Button/Button\";\nimport history from \"../../history\";\nimport constants from \"../../utils/constants\";\nimport \"./Header.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { togglePopup } from \"../../store/actions/commonActions\";\nimport { rebuild } from \"../../store/actions/buildsActions\";\nimport { getDetails } from \"../../store/reducers/buildsReducer\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface HeaderProps extends DefaultProps {\n  title: { text?: string | boolean; modifiers: string[][] };\n  buttons?: {\n    modifiers: string[][];\n    onClick: string;\n    text?: string;\n    iconType: string;\n  }[];\n}\n\nfunction Header(props: HeaderProps) {\n  const blockName = \"Header\";\n  const {\n    className = \"\",\n    modifiers = [],\n    title = {\n      text: false,\n      modifiers: [],\n    },\n    buttons = [],\n  } = props;\n\n  const dispatch = useDispatch();\n  const details = useSelector(getDetails);\n\n  return (\n    <header\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        {title.text && (\n          <div\n            className={`${blockName}-Title Text ${processModifiers(\n              \"Text\",\n              title.modifiers\n            )}`}\n          >\n            {title.text}\n          </div>\n        )}\n        {buttons.length > 0 && (\n          <div className={`${blockName}-ButtonsBlock`}>\n            {buttons.map((buttonProps, buttonKey) => {\n              const { modifiers, onClick, text, iconType } = buttonProps;\n\n              let onClickFn;\n              switch (onClick) {\n                case constants.GO_TO_SETTINGS:\n                  onClickFn = () => history.push(\"/settings\");\n                  break;\n                case constants.RUN_BUILD:\n                  onClickFn = () => {\n                    dispatch(togglePopup(true));\n                  };\n                  break;\n                case constants.REBUILD:\n                  onClickFn = () => {\n                    dispatch(rebuild(details!.commitHash));\n                  };\n                  break;\n                default:\n                  break;\n              }\n\n              return (\n                <Button\n                  key={buttonKey}\n                  className={`${blockName}-Button`}\n                  modifiers={modifiers}\n                  onClick={onClickFn}\n                  text={text}\n                  iconType={iconType}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport constants from \"../../utils/constants\";\nimport history from \"../../history\";\nimport WithoutConfiguration from \"../../components/WithoutConfiguration/WithoutConfiguration\";\nimport Header from \"../../components/Header/Header\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface IndexPageProps extends DefaultProps {}\n\nfunction IndexPage(props: IndexPageProps) {\n  const { className = \"\", modifiers = [] } = props;\n\n  useEffect(() => {\n    document.title = constants.SITE_NAME;\n  }, []);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: constants.SITE_NAME,\n          modifiers: [[\"type\", \"headerTitle\"]],\n        }}\n        buttons={[\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"before\"],\n            ],\n            onClick: constants.GO_TO_SETTINGS,\n            text: \"Settings\",\n            iconType: \"settings\",\n          },\n        ]}\n      />\n      <WithoutConfiguration\n        className={className}\n        modifiers={modifiers}\n        actionFn={() => history.push(\"/settings\")}\n      />\n    </>\n  );\n}\n\nexport default IndexPage;\n","import constants from \"../../utils/constants\";\nimport history from \"../../history\";\nimport { toggleAppLoading, toggleProgress } from \"./commonActions\";\nimport { fetchBuilds } from \"./buildsActions\";\nimport {\n  SettingsState,\n  FETCH_CONFIG,\n  SAVE_CONFIG,\n} from \"../../types/store/settingsTypes\";\nimport { Dispatch } from \"redux\";\n\nexport const saveSettings = (\n  config: SettingsState[\"config\"],\n  errorsCount = 0\n) => (dispatch: Dispatch): Promise<any> => {\n  dispatch(toggleProgress(true));\n\n  return fetch(`${constants.SERVER_API}/settings`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(config),\n  })\n    .then((res) => res.json())\n    .then(async ({ error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return saveSettings(config, errorsCount)(dispatch);\n        }\n      } else {\n        dispatch({\n          type: SAVE_CONFIG,\n          payload: config,\n        });\n      }\n\n      dispatch(toggleProgress(false));\n      history.goBack();\n    });\n};\n\nexport const fetchSettings = (errorsCount = 0, isNeedDispatchInEnd = false) => (\n  dispatch: Dispatch\n): Promise<any> => {\n  console.log(\"fetchSettings\");\n  return fetch(`${constants.SERVER_API}/settings`)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchSettings(errorsCount, isNeedDispatchInEnd)(dispatch);\n        }\n        return null;\n      }\n\n      if (isNeedDispatchInEnd) {\n        dispatch({\n          type: FETCH_CONFIG,\n          payload: data,\n        });\n      } else {\n        return data;\n      }\n    });\n};\n\nexport const fetchSettingsBeforeUsingApp = () => async (\n  dispatch: Dispatch\n): Promise<any> => {\n  const settingsData = await fetchSettings()(dispatch);\n\n  if (settingsData === null) return;\n\n  if (settingsData.repoName) {\n    await fetchBuilds({ limit: 10 })(dispatch);\n  }\n\n  dispatch({\n    type: FETCH_CONFIG,\n    payload: settingsData,\n  });\n\n  dispatch(toggleAppLoading(false));\n};\n","// Describing the shape of the system's slice of state\nexport interface SettingsState {\n  config: {\n    repoName?: string;\n    buildCommand?: string;\n    mainBranch?: string;\n    period?: number;\n  };\n}\n\n// Describing the different ACTION NAMES available\nexport const FETCH_CONFIG = \"FETCH_CONFIG\";\nexport const SAVE_CONFIG = \"SAVE_CONFIG\";\n\ninterface FetchConfigAction {\n  type: typeof FETCH_CONFIG;\n  payload: SettingsState[\"config\"];\n}\n\ninterface SaveConfigAction {\n  type: typeof SAVE_CONFIG;\n  payload: SettingsState[\"config\"];\n}\n\nexport type SettingsActionTypes = FetchConfigAction | SaveConfigAction;\n","import React, { useState } from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Input.scss\";\nimport { useSelector } from \"react-redux\";\nimport { DefaultProps } from \"../../types/defaultProps\";\nimport { getIsInProgress } from \"../../store/reducers/commonReducer\";\n\nexport interface InputProps extends DefaultProps {\n  labelBefore?: {\n    text: string | boolean;\n    className: string;\n    modifiers: string[][];\n  };\n  labelAfter?: {\n    text: string | boolean;\n    className: string;\n    modifiers: string[][];\n  };\n  id: string;\n  type?: string;\n  placeholder?: string;\n  name: string;\n  required?: boolean;\n  inputMode?:\n    | \"text\"\n    | \"none\"\n    | \"tel\"\n    | \"url\"\n    | \"email\"\n    | \"numeric\"\n    | \"decimal\"\n    | \"search\";\n  value?: string;\n  pattern?: string;\n  forwardRef: React.RefObject<HTMLInputElement>;\n}\n\nfunction Input(props: InputProps) {\n  const blockName = \"Input\";\n  const {\n    className = \"\",\n    modifiers = [],\n    labelBefore = {\n      text: false,\n      className: \"\",\n      modifiers: [],\n    },\n    labelAfter = {\n      text: false,\n      className: \"\",\n      modifiers: [],\n    },\n    id,\n    type = \"text\",\n    placeholder,\n    name,\n    required = false,\n    inputMode,\n    value = \"\",\n    pattern,\n    forwardRef,\n  } = props;\n\n  const isClearButtonVisible =\n    modifiers.filter(\n      ([modifierName, modifierValue]) =>\n        modifierName === \"clear\" && modifierValue === \"visible\"\n    ).length > 0;\n\n  const [valueFromState, setValueFromState] = useState(value);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setValueFromState(event.target.value);\n  const handleClear = () => setValueFromState(\"\");\n\n  const isInProgress = useSelector(getIsInProgress);\n\n  return (\n    <>\n      {labelBefore.text && (\n        <label\n          htmlFor={id}\n          className={`${labelBefore.className} Text ${processModifiers(\n            \"Text\",\n            labelBefore.modifiers\n          )}`}\n        >\n          {labelBefore.text}\n        </label>\n      )}\n      <div\n        className={`${className} ${blockName} ${processModifiers(\n          blockName,\n          modifiers\n        )} ${isInProgress ? `${blockName}_disabled` : \"\"}`}\n      >\n        <input\n          id={id}\n          className={`${blockName}-Control`}\n          type={type}\n          placeholder={placeholder}\n          name={name}\n          required={required}\n          onChange={handleChange}\n          value={valueFromState}\n          inputMode={inputMode}\n          pattern={pattern}\n          ref={forwardRef}\n        />\n        {isClearButtonVisible && (\n          <Icon\n            className={`${blockName}-ClearIcon`}\n            modifiers={[[\"type\", \"clear\"]]}\n            onClick={handleClear}\n          />\n        )}\n      </div>\n      {labelAfter.text && (\n        <label\n          htmlFor={id}\n          className={`${labelAfter.className} Text ${processModifiers(\n            \"Text\",\n            labelAfter.modifiers\n          )}`}\n        >\n          {labelAfter.text}\n        </label>\n      )}\n    </>\n  );\n}\n\nexport default Input;\n","import { AppState } from \".\";\nimport {\n  SettingsState,\n  SettingsActionTypes,\n  SAVE_CONFIG,\n  FETCH_CONFIG,\n} from \"../../types/store/settingsTypes\";\n\nconst defaultState: SettingsState = {\n  config: {},\n};\n\nexport default function (state = defaultState, action: SettingsActionTypes) {\n  switch (action.type) {\n    case SAVE_CONFIG:\n      const { repoName, buildCommand, mainBranch, period } = action.payload;\n      return {\n        ...state,\n        config: {\n          repoName,\n          buildCommand,\n          mainBranch,\n          period,\n        },\n      };\n    case FETCH_CONFIG:\n      return {\n        ...state,\n        config: { ...action.payload },\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getSettingsConfig = (state: AppState) => state.settings.config;\nexport const getRepositoryName = (state: AppState) =>\n  state.settings.config.repoName ? state.settings.config.repoName : \"\";\nexport const getBuildCommand = (state: AppState) =>\n  state.settings.config.buildCommand ? state.settings.config.buildCommand : \"\";\nexport const getMainBranch = (state: AppState) =>\n  state.settings.config.mainBranch ? state.settings.config.mainBranch : \"\";\nexport const getPeriod = (state: AppState) =>\n  state.settings.config.period ? state.settings.config.period : \"10\";\n","import React, { useRef } from \"react\";\nimport history from \"../../history\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport { saveSettings } from \"../../store/actions/settingsActions\";\nimport Button from \"../../components/Button/Button\";\nimport Input from \"../../components/Input/Input\";\nimport \"./Form.scss\";\nimport { DefaultProps } from \"../../types/defaultProps\";\nimport {\n  getRepositoryName,\n  getBuildCommand,\n  getMainBranch,\n  getPeriod,\n} from \"../../store/reducers/settingsReducer\";\n\nexport interface FormProps extends DefaultProps {}\n\nfunction Form(props: FormProps) {\n  const blockName = \"Form\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const dispatch = useDispatch();\n\n  const repositoryNameRef = useRef<HTMLInputElement>(null);\n  const buildCommandRef = useRef<HTMLInputElement>(null);\n  const mainBranchRef = useRef<HTMLInputElement>(null);\n  const periodRef = useRef<HTMLInputElement>(null);\n\n  const repositoryName = useSelector(getRepositoryName);\n  const buildCommand = useSelector(getBuildCommand);\n  const mainBranch = useSelector(getMainBranch);\n  const period = useSelector(getPeriod);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event && event.preventDefault();\n\n    const config = {\n      repoName: repositoryNameRef!.current!.value,\n      buildCommand: buildCommandRef!.current!.value,\n      mainBranch: mainBranchRef!.current!.value,\n      period: (periodRef!.current!.value as unknown) as number,\n    };\n    console.log(\"config: \", config);\n\n    dispatch(saveSettings(config));\n  };\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  return (\n    <form\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n      onSubmit={handleSubmit}\n    >\n      <div className={`${blockName}-Content`}>\n        <div className={`${blockName}-Item ${blockName}-Item_type_header`}>\n          <div className={`${blockName}-Label Text Text_type_formHeader`}>\n            Settings\n          </div>\n          <div className=\"Text\">\n            Configure repository connection{\" \"}\n            <span className=\"Text-NonBreakable\">\n              and synchronization settings\n            </span>\n          </div>\n        </div>\n        <div className={`${blockName}-Item`}>\n          <Input\n            className={`${blockName}-Input`}\n            modifiers={[[\"clear\", \"visible\"]]}\n            labelBefore={{\n              text: \"GitHub repository\",\n              className: `${blockName}-Label ${blockName}-Label_type_required`,\n              modifiers: [[\"type\", \"formLabel\"]],\n            }}\n            id=\"repository\"\n            type=\"text\"\n            placeholder=\"user-name/repo-name\"\n            name=\"repository\"\n            required\n            value={repositoryName}\n            forwardRef={repositoryNameRef}\n          />\n        </div>\n        <div className={`${blockName}-Item`}>\n          <Input\n            className={`${blockName}-Input`}\n            modifiers={[[\"clear\", \"visible\"]]}\n            labelBefore={{\n              text: \"Build command\",\n              className: `${blockName}-Label`,\n              modifiers: [[\"type\", \"formLabel\"]],\n            }}\n            id=\"command\"\n            type=\"text\"\n            placeholder=\"npm ci && npm run build\"\n            name=\"command\"\n            required\n            value={buildCommand}\n            forwardRef={buildCommandRef}\n          />\n        </div>\n        <div className={`${blockName}-Item`}>\n          <Input\n            className={`${blockName}-Input`}\n            modifiers={[[\"clear\", \"visible\"]]}\n            labelBefore={{\n              text: \"Main branch\",\n              className: `${blockName}-Label`,\n              modifiers: [[\"type\", \"formLabel\"]],\n            }}\n            id=\"branch\"\n            type=\"text\"\n            placeholder=\"master\"\n            name=\"branch\"\n            required\n            value={mainBranch}\n            forwardRef={mainBranchRef}\n          />\n        </div>\n        <div className={`${blockName}-Item ${blockName}-Item_type_flat`}>\n          <Input\n            className={`${blockName}-Input`}\n            modifiers={[\n              [\"size\", \"small\"],\n              [\"align\", \"right\"],\n            ]}\n            labelBefore={{\n              text: \"Synchronize every\",\n              className: `${blockName}-Label`,\n              modifiers: [],\n            }}\n            labelAfter={{\n              text: \"minutes\",\n              className: `${blockName}-Label`,\n              modifiers: [],\n            }}\n            id=\"minutes\"\n            type=\"text\"\n            inputMode=\"numeric\"\n            pattern=\"^[0]*[1-9][\\d]*$\"\n            name=\"minutes\"\n            required\n            value={period as string}\n            forwardRef={periodRef}\n          />\n        </div>\n        <div className={`${blockName}-Item`}>\n          <div className={`${blockName}-ButtonsBlock`}>\n            <Button\n              className={`${blockName}-Button`}\n              modifiers={[[\"color\", \"accent\"]]}\n              text=\"Save\"\n              type=\"submit\"\n            />\n            <Button\n              type=\"button\"\n              className={`${blockName}-Button`}\n              onClick={handleCancel}\n              text=\"Cancel\"\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useEffect } from \"react\";\nimport constants from \"../../utils/constants\";\nimport Header from \"../../components/Header/Header\";\nimport Form from \"../../components/Form/Form\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface SettingsPageProps extends DefaultProps {}\n\nfunction SettingsPage(props: SettingsPageProps) {\n  const { className = \"\", modifiers = [] } = props;\n\n  useEffect(() => {\n    document.title = `Settings | ${constants.SITE_NAME}`;\n  }, []);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: constants.SITE_NAME,\n          modifiers: [[\"type\", \"headerTitle\"]],\n        }}\n      />\n      <Form className={className} modifiers={modifiers} />\n    </>\n  );\n}\n\nexport default SettingsPage;\n","import React, { useEffect, useState } from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport { Link } from \"react-router-dom\";\nimport \"./Card.scss\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface CardProps extends DefaultProps {\n  buildNumber: number;\n  commitMessage?: string;\n  branchName?: string;\n  commitHash?: string;\n  authorName?: string;\n  status: string;\n  start?: Date;\n  duration?: number;\n  to?: string;\n}\n\nfunction Card(props: CardProps) {\n  const blockName = \"Card\";\n  const {\n    className = \"\",\n    modifiers = [],\n    buildNumber,\n    commitMessage = \"\",\n    branchName = \"\",\n    commitHash = \"\",\n    authorName = \"\",\n    status,\n    start,\n    duration,\n    to = \"\",\n  } = props;\n\n  const [formattedDate, setFormattedDate] = useState({ full: \"\", short: \"\" });\n  useEffect(() => {\n    if (!start) return;\n\n    const [rawDate, rawTime] = ((start as unknown) as string).split(\"T\");\n\n    const monthsNames = {\n      \"01\": \"янв\",\n      \"02\": \"февр\",\n      \"03\": \"март\",\n      \"04\": \"апр\",\n      \"05\": \"май\",\n      \"06\": \"июнь\",\n      \"07\": \"июль\",\n      \"08\": \"авг\",\n      \"09\": \"сент\",\n      \"10\": \"окт\",\n      \"11\": \"нояб\",\n      \"12\": \"дек\",\n    };\n\n    const formatDate = (rawDate: string, rawTime: string) => {\n      const [year, monthNumber, day] = rawDate.split(\"-\");\n      const [hour, minutes] = rawTime.split(\":\");\n      const monthName =\n        monthsNames[\n          monthNumber as\n            | \"01\"\n            | \"02\"\n            | \"03\"\n            | \"04\"\n            | \"05\"\n            | \"06\"\n            | \"07\"\n            | \"08\"\n            | \"09\"\n            | \"10\"\n            | \"11\"\n            | \"12\"\n        ];\n\n      return {\n        full: `${day} ${monthName} ${year}, ${hour}:${minutes}`,\n        short: `${day} ${monthName}, ${hour}:${minutes}`,\n      };\n    };\n\n    setFormattedDate(formatDate(rawDate, rawTime));\n  }, [start]);\n\n  const [formattedDuration, setFormattedDuration] = useState(\"\");\n  useEffect(() => {\n    if (!duration) return;\n\n    const formatBuildTime = (duration: number) => {\n      const hours = Math.floor(duration / 60);\n      const minutes = duration % 60;\n\n      const hoursStr = hours ? `${hours} ч` : \"\";\n      const minutesStr = minutes ? `${minutes} мин` : \"\";\n\n      return `${hoursStr}${hours && minutes ? \" \" : \"\"}${minutesStr}`;\n    };\n\n    setFormattedDuration(formatBuildTime(duration));\n  }, [duration]);\n\n  function ellipseStr(str: string, maxLength: number) {\n    if (str.length > maxLength) {\n      return str.slice(0, maxLength - 1) + \"...\";\n    }\n\n    return str;\n  }\n\n  const [formattedBranchName, setFormattedBranchName] = useState(\"\");\n  useEffect(() => {\n    if (!branchName) return;\n\n    setFormattedBranchName(ellipseStr(branchName, 15));\n  }, [branchName]);\n\n  const [formattedAuthorName, setFormattedAuthorName] = useState(\"\");\n  useEffect(() => {\n    if (!authorName) return;\n\n    setFormattedAuthorName(ellipseStr(authorName, 15));\n  }, [authorName]);\n\n  const [formattedCommitHash, setFormattedCommitHash] = useState(\"\");\n  useEffect(() => {\n    if (!commitHash) return;\n\n    setFormattedCommitHash(commitHash.slice(0, 7));\n  }, [commitHash]);\n\n  const CardTag = to ? Link : \"div\";\n\n  return (\n    <CardTag\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n      to={to}\n    >\n      <div className={`${blockName}-Content`}>\n        <Icon className={`${blockName}-Icon`} modifiers={[[\"type\", status]]} />\n        <div className={`${blockName}-DataWrapper`}>\n          <div className={`${blockName}-Data`}>\n            <div className={`${blockName}-DataTitle`}>\n              <div className={`${blockName}-Number`}>#{buildNumber}</div>\n              <div className={`${blockName}-CommitName Text Text_type_commit`}>\n                {commitMessage}\n              </div>\n            </div>\n            <div className={`${blockName}-DataOther`}>\n              <div className={`${blockName}-OtherInfo`}>\n                <Icon\n                  className={`${blockName}-OtherIcon`}\n                  modifiers={[[\"type\", \"branch\"]]}\n                />\n                <div className={`${blockName}-OtherText Text Text_type_card`}>\n                  {formattedBranchName}\n                </div>\n                <div\n                  className={`${blockName}-OtherText ${blockName}-OtherText_type_hash Text Text_type_card`}\n                >\n                  {formattedCommitHash}\n                </div>\n              </div>\n              <div className={`${blockName}-OtherInfo`}>\n                <Icon\n                  className={`${blockName}-OtherIcon`}\n                  modifiers={[[\"type\", \"user\"]]}\n                />\n                <div className={`${blockName}-OtherText Text Text_type_card`}>\n                  {formattedAuthorName}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={`${blockName}-TimeBlock`}>\n            <div\n              className={`${blockName}-TimeItem ${\n                !formattedDate.short ? `${blockName}-TimeItem_hidden` : \"\"\n              }`}\n            >\n              <Icon\n                className={`${blockName}-TimeIcon`}\n                modifiers={[[\"type\", \"calendar\"]]}\n              />\n              <div\n                className={`${blockName}-TimeText Text Text_type_card`}\n                title={formattedDate.full || \"\"}\n              >\n                {formattedDate.short || \"\"}\n              </div>\n            </div>\n            <div\n              className={`${blockName}-TimeItem ${\n                !formattedDuration ? `${blockName}-TimeItem_hidden` : \"\"\n              }`}\n            >\n              <Icon\n                className={`${blockName}-TimeIcon`}\n                modifiers={[[\"type\", \"stopwatch\"]]}\n              />\n              <div className={`${blockName}-TimeText Text Text_type_card`}>\n                {formattedDuration || \"\"}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </CardTag>\n  );\n}\n\nexport default Card;\n","import React, { useEffect, useCallback } from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport Button from \"../Button/Button\";\nimport Card from \"../Card/Card\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./BuildList.scss\";\nimport { getBuildsData } from \"../../store/reducers/buildsReducer\";\nimport {\n  fetchBuilds,\n  fetchMoreBuilds,\n} from \"../../store/actions/buildsActions\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface BuildListProps extends DefaultProps {}\n\nfunction BuildList(props: BuildListProps) {\n  const blockName = \"BuildList\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const buildsData = useSelector(getBuildsData);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchBuilds({ limit: 10 }));\n    // eslint-disable-next-line\n  }, []);\n\n  const onShowMoreClick = useCallback(\n    () => dispatch(fetchMoreBuilds({ limit: 10, offset: buildsData.length })),\n    // eslint-disable-next-line\n    [buildsData.length]\n  );\n\n  return (\n    <main\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        {buildsData.map(\n          ({\n            status,\n            id,\n            buildNumber,\n            commitMessage,\n            branchName,\n            commitHash,\n            authorName,\n            start,\n            duration,\n          }) => {\n            let correctStatus;\n            switch (status) {\n              case \"InProgress\":\n              case \"Waiting\":\n                correctStatus = \"progress\";\n                break;\n              case \"Success\":\n                correctStatus = \"done\";\n                break;\n              case \"Fail\":\n              case \"Canceled\":\n              default:\n                correctStatus = \"fail\";\n                break;\n            }\n            return (\n              <Card\n                className={`${blockName}-Item`}\n                modifiers={[[\"type\", correctStatus]]}\n                to={`/build/${id}`}\n                buildNumber={buildNumber}\n                commitMessage={commitMessage}\n                branchName={branchName}\n                commitHash={commitHash}\n                authorName={authorName}\n                start={start}\n                duration={duration}\n                key={id}\n                status={correctStatus}\n              />\n            );\n          }\n        )}\n\n        <Button\n          className={`${blockName}-Button`}\n          modifiers={[[\"type\", \"controlExtended\"]]}\n          text=\"Show more\"\n          onClick={onShowMoreClick}\n        />\n      </div>\n    </main>\n  );\n}\n\nexport default BuildList;\n","import React, { useEffect } from \"react\";\nimport constants from \"../../utils/constants\";\nimport Header from \"../../components/Header/Header\";\nimport BuildList from \"../../components/BuildList/BuildList\";\nimport { useSelector } from \"react-redux\";\nimport { getSettingsConfig } from \"../../store/reducers/settingsReducer\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface BuildHistoryPageProps extends DefaultProps {}\n\nfunction BuildHistoryPage(props: BuildHistoryPageProps) {\n  const { className = \"\" } = props;\n\n  useEffect(() => {\n    document.title = `Build history | ${constants.SITE_NAME}`;\n  }, []);\n\n  const settingsConfig = useSelector(getSettingsConfig);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: settingsConfig.repoName,\n          modifiers: [[\"type\", \"repositoryName\"]],\n        }}\n        buttons={[\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"before\"],\n            ],\n            onClick: constants.RUN_BUILD,\n            text: \"Run build\",\n            iconType: \"play\",\n          },\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"only\"],\n            ],\n            onClick: constants.GO_TO_SETTINGS,\n            iconType: \"settings\",\n          },\n        ]}\n      />\n      <BuildList className={className} />\n    </>\n  );\n}\n\nexport default BuildHistoryPage;\n","import React from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./BuildLog.scss\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface BuildLogProps extends DefaultProps {\n  logString: string;\n}\n\nfunction BuildLog(props: BuildLogProps) {\n  const blockName = \"BuildLog\";\n  const { className = \"\", modifiers = [], logString = \"\" } = props;\n\n  return (\n    <pre\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n      dangerouslySetInnerHTML={{ __html: logString }}\n    />\n  );\n}\n\nexport default BuildLog;\n","import React from \"react\";\nimport \"./Loader.scss\";\n\nfunction Loader() {\n  return (\n    <div className=\"Loader\">\n      <div className=\"Loader-SpinerWrapper\">\n        <div className=\"Loader-Spiner\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useEffect } from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport Card from \"../Card/Card\";\nimport BuildLog from \"../BuildLog/BuildLog\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport \"./BuildDetails.scss\";\nimport { fetchBuildDetailsAndLog } from \"../../store/actions/buildsActions\";\nimport {\n  getDetails,\n  getLog,\n  getBuildsData,\n  getNewBuildId,\n} from \"../../store/reducers/buildsReducer\";\nimport { useState } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport history from \"../../history\";\n\nimport Convert from \"ansi-to-html\";\n\nimport { BuildModel } from \"../../../../server/typings/api\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface BuildDetailsProps extends DefaultProps {}\n\nfunction BuildDetails(props: BuildDetailsProps) {\n  const blockName = \"BuildDetails\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const { buildId } = useParams();\n\n  const buildsData = useSelector(getBuildsData);\n  const newBuildId = useSelector(getNewBuildId);\n  const details = useSelector(getDetails);\n  const log = useSelector(getLog);\n\n  const [logStringHtml, setLogStringHtml] = useState(\"\");\n\n  const convert = new Convert({\n    fg: \"#000\",\n    bg: \"#000\",\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // check if buildId in buildsData or it is newBuildId\n    if (\n      newBuildId === buildId ||\n      buildsData.some((buildData: BuildModel) => buildData.id === buildId)\n    ) {\n      dispatch(fetchBuildDetailsAndLog(buildId));\n    } else {\n      history.push(\"/\");\n    }\n    // eslint-disable-next-line\n  }, [buildId, buildsData, newBuildId]);\n\n  useEffect(() => {\n    setLogStringHtml(convert.toHtml(log || \"\"));\n  }, [log, convert]);\n\n  const [correctStatus, setCorrectStatus] = useState(\"\");\n  useEffect(() => {\n    if (!details) return;\n\n    let correct;\n    switch (details.status) {\n      case \"InProgress\":\n      case \"Waiting\":\n        correct = \"progress\";\n        break;\n      case \"Success\":\n        correct = \"done\";\n        break;\n      case \"Fail\":\n      case \"Canceled\":\n      default:\n        correct = \"fail\";\n        break;\n    }\n\n    setCorrectStatus(correct);\n  }, [details]);\n\n  return (\n    <main\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        {details && details.id === buildId ? (\n          <>\n            <Card\n              className={`${blockName}-Item`}\n              modifiers={[\n                [\"type\", correctStatus],\n                [\"page\", \"details\"],\n              ]}\n              buildNumber={details.buildNumber}\n              commitMessage={details.commitMessage}\n              branchName={details.branchName}\n              commitHash={details.commitHash}\n              authorName={details.authorName}\n              start={details.start}\n              duration={details.duration}\n              status={correctStatus}\n            />\n            {logStringHtml && <BuildLog logString={logStringHtml} />}\n          </>\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </main>\n  );\n}\n\nexport default BuildDetails;\n","import React, { useEffect } from \"react\";\nimport constants from \"../../utils/constants\";\nimport BuildDetails from \"../../components/BuildDetails/BuildDetails\";\nimport { useSelector } from \"react-redux\";\nimport Header from \"../../components/Header/Header\";\nimport { getSettingsConfig } from \"../../store/reducers/settingsReducer\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface BuildDetailsPageProps extends DefaultProps {}\n\nfunction BuildDetailsPage(props: BuildDetailsPageProps) {\n  const { className = \"\" } = props;\n\n  useEffect(() => {\n    document.title = `Build details | ${constants.SITE_NAME}`;\n  }, []);\n\n  const settingsConfig = useSelector(getSettingsConfig);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: settingsConfig.repoName!,\n          modifiers: [[\"type\", \"repositoryName\"]],\n        }}\n        buttons={[\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"before\"],\n            ],\n            onClick: constants.REBUILD,\n            text: \"Rebuild\",\n            iconType: \"restart\",\n          },\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"only\"],\n            ],\n            onClick: constants.GO_TO_SETTINGS,\n            iconType: \"settings\",\n          },\n        ]}\n      />\n      <BuildDetails className={className} />\n    </>\n  );\n}\n\nexport default BuildDetailsPage;\n","import React from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport { Link } from \"react-router-dom\";\nimport \"./NotFound.scss\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface NotFoundProps extends DefaultProps {}\n\nfunction NotFound(props: NotFoundProps) {\n  const blockName = \"NotFound\";\n  const { className = \"\", modifiers = [] } = props;\n\n  return (\n    <main\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        Page not found. Error 404. <Link to=\"/\">Go to home page</Link>.\n      </div>\n    </main>\n  );\n}\n\nexport default NotFound;\n","import React, { useEffect } from \"react\";\nimport NotFound from \"../../components/NotFound/NotFound\";\nimport constants from \"../../utils/constants\";\nimport Header from \"../../components/Header/Header\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface NotFoundPageProps extends DefaultProps {}\n\nfunction NotFoundPage(props: NotFoundPageProps) {\n  const { className = \"\", modifiers = [] } = props;\n\n  useEffect(() => {\n    document.title = `Page not found | ${constants.SITE_NAME}`;\n  }, []);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: constants.SITE_NAME,\n          modifiers: [[\"type\", \"headerTitle\"]],\n        }}\n      />\n      <NotFound className={className} modifiers={modifiers} />\n    </>\n  );\n}\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Footer.scss\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface FooterProps extends DefaultProps {}\n\nfunction Footer(props: FooterProps) {\n  const blockName = \"Footer\";\n  const { className = \"\", modifiers = [] } = props;\n\n  return (\n    <footer\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        <div className={`${blockName}-LinksWrapper`}>\n          <Link\n            to=\"/support\"\n            className={`${blockName}-Link MyLink MyLink_type_footer`}\n          >\n            Support\n          </Link>\n          <Link\n            to=\"/learning\"\n            className={`${blockName}-Link MyLink MyLink_type_footer`}\n          >\n            Learning\n          </Link>\n        </div>\n        <div className={`${blockName}-Credentional Text Text_type_footer`}>\n          © 2020 Your Name\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useRef } from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Popup.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { startNewBuild } from \"../../store/actions/buildsActions\";\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\nimport { togglePopup } from \"../../store/actions/commonActions\";\nimport { DefaultProps } from \"../../types/defaultProps\";\n\nexport interface PopupProps extends DefaultProps {}\n\nfunction Popup(props: PopupProps) {\n  const blockName = \"Form\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const dispatch = useDispatch();\n\n  const commitHashRef = useRef<HTMLInputElement>(null);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event && event.preventDefault();\n\n    const commitHash = commitHashRef!.current!.value.trim();\n    console.log(\"commitHash: \", commitHash);\n\n    dispatch(startNewBuild(commitHash));\n  };\n\n  const handleCancel = () => {\n    commitHashRef!.current!.value = \"\";\n    dispatch(togglePopup(false));\n  };\n\n  return (\n    <div className={`Popup-Wrapper`}>\n      <form\n        className={`Popup ${className} ${blockName} ${processModifiers(\n          blockName,\n          modifiers\n        )}`}\n        onSubmit={handleSubmit}\n      >\n        <div className={`${blockName}-Content`}>\n          <div className={`${blockName}-Header Text Text_type_popupHeader`}>\n            New build\n          </div>\n          <div className={`${blockName}-Item`}>\n            <Input\n              className={`${blockName}-Input`}\n              modifiers={[[\"clear\", \"visible\"]]}\n              labelBefore={{\n                text: \"Enter the commit hash which you want to build.\",\n                className: `${blockName}-Label`,\n                modifiers: [[\"type\", \"formLabel\"]],\n              }}\n              id=\"commit\"\n              type=\"text\"\n              placeholder=\"Commit hash\"\n              pattern=\"\\S+\"\n              name=\"commit\"\n              required\n              value=\"\"\n              forwardRef={commitHashRef}\n            />\n          </div>\n          <div className={`${blockName}-Item`}>\n            <div className={`${blockName}-ButtonsBlock`}>\n              <Button\n                className={`${blockName}-Button`}\n                modifiers={[[\"color\", \"accent\"]]}\n                text=\"Run build\"\n                type=\"submit\"\n              />\n              <Button\n                type=\"button\"\n                className={`${blockName}-Button`}\n                modifiers={[[\"color\", \"transparent\"]]}\n                onClick={handleCancel}\n                text=\"Cancel\"\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Popup;\n","import React, { useEffect } from \"react\";\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport IndexPage from \"./pages/IndexPage/IndexPage\";\nimport SettingsPage from \"./pages/SettingsPage/SettingsPage\";\nimport BuildHistoryPage from \"./pages/BuildHistoryPage/BuildHistoryPage\";\nimport BuildDetailsPage from \"./pages/BuildDetailsPage/BuildDetailsPage\";\nimport NotFoundPage from \"./pages/NotFoundPage/NotFoundPage\";\nimport \"./styles/main.scss\";\n\nimport Footer from \"./components/Footer/Footer\";\nimport { getSettingsConfig } from \"./store/reducers/settingsReducer\";\nimport history from \"./history\";\nimport { fetchSettingsBeforeUsingApp } from \"./store/actions/settingsActions\";\nimport {\n  getIsAppLoading,\n  getIsPopupActive,\n  getIsInProgress,\n} from \"./store/reducers/commonReducer\";\nimport Loader from \"./components/Loader/Loader\";\nimport Popup from \"./components/Popup/Popup\";\n\nfunction App() {\n  const isFetching = useSelector(getIsAppLoading);\n  const isPopupActive = useSelector(getIsPopupActive);\n  const isInProgress = useSelector(getIsInProgress);\n  const settingsConfig = useSelector(getSettingsConfig);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchSettingsBeforeUsingApp());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const root = document.getElementById(\"root\")!;\n    if (isPopupActive) {\n      root.classList.add(\"Container_popup_active\");\n    } else {\n      root.classList.remove(\"Container_popup_active\");\n    }\n  }, [isPopupActive]);\n\n  useEffect(() => {\n    const root = document.getElementById(\"root\")!;\n    if (isInProgress) {\n      root.classList.add(\"Container_inactive\");\n    } else {\n      root.classList.remove(\"Container_inactive\");\n    }\n  }, [isInProgress]);\n\n  return (\n    <>\n      {isFetching ? (\n        <Loader />\n      ) : (\n        <Router history={history}>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() =>\n                settingsConfig.repoName ? (\n                  <BuildHistoryPage className=\"Container-Main\" />\n                ) : (\n                  <IndexPage className=\"Container-Main\" />\n                )\n              }\n            />\n            <Route\n              path=\"/build/:buildId\"\n              render={({ location }) =>\n                settingsConfig.repoName ? (\n                  <BuildDetailsPage className=\"Container-Main\" />\n                ) : (\n                  <Redirect to={{ pathname: \"/\", state: { from: location } }} />\n                )\n              }\n            />\n            <Route path=\"/settings\">\n              <SettingsPage className=\"Container-Main\" />\n            </Route>\n            <Route path=\"*\">\n              <NotFoundPage className=\"Container-Main\" />\n            </Route>\n          </Switch>\n\n          <Footer className=\"Container-Footer\" />\n          {isPopupActive && <Popup modifiers={[[\"popup\"]]} />}\n        </Router>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport commonReducer from \"./commonReducer\";\nimport settingsReducer from \"./settingsReducer\";\nimport buildsReducer from \"./buildsReducer\";\n\nconst rootReducer = combineReducers({\n  common: commonReducer,\n  settings: settingsReducer,\n  builds: buildsReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst middlewares = [thunk];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(middlewareEnhancer)\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}