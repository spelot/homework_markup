{"version":3,"sources":["utils/constants.js","history.js","utils/processModifiers.js","components/Icon/Icon.jsx","components/Button/Button.jsx","store/reducers/settingsReducer.js","utils/i18n.js","components/WithoutConfiguration/WithoutConfiguration.jsx","store/actions/commonActions.js","store/actions/buildsActions.js","store/reducers/buildsReducer.js","components/Header/Header.jsx","pages/IndexPage/IndexPage.jsx","store/actions/settingsActions.js","components/Input/Input.jsx","components/Form/Form.jsx","pages/SettingsPage/SettingsPage.jsx","components/Card/Card.jsx","components/BuildList/BuildList.jsx","pages/BuildHistoryPage/BuildHistoryPage.jsx","components/BuildLog/BuildLog.jsx","components/Loader/Loader.jsx","components/BuildDetails/BuildDetails.jsx","pages/BuildDetailsPage/BuildDetailsPage.jsx","components/NotFound/NotFound.jsx","pages/NotFoundPage/NotFoundPage.jsx","components/Footer/Footer.jsx","store/reducers/commonReducer.js","components/Popup/Popup.jsx","App.js","serviceWorker.js","components/ErrorBoundary/ErrorBoundary.jsx","store/reducers/index.js","store/store.js","index.js"],"names":["APP_LOADING","POPUP","DETAILS","FETCH_CONFIG","SAVE_CONFIG","FETCH_LANGUAGE_DICTIONARY","TOGGLE_PROGRESS","FETCH_BUILDS","FETCH_MORE_BUILDS","DETAILS_BUILD","LOG_BUILD","NEW_BUILD_ID","INDEX_PAGE_HEADER","BUILD_LOG_PAGE_HEADER","SETTINGS_PAGE_HEADER","BUILD_DETAILS_PAGE_HEADER","GO_TO_SETTINGS","RUN_BUILD","REBUILD","SERVER_API","createBrowserHistory","blockName","modifiers","map","modifierName","modifierValue","undefined","includes","join","Icon","props","className","onClick","processModifiers","Button","text","iconType","type","isInProgress","useSelector","state","common","defaultState","config","dictionary","getSettingsConfig","settings","getLanguageDictionary","getCurrentLanguge","CURRENT_LANG","forms","ru","count","lastNumber","lastNumbers","en","generateText","msg","params","res","tmp","char","push","i18n","lang","key","value","form","WithoutConfiguration","actionFn","currentLanguage","toggleProgress","constants","payload","toggleAppLoading","bool","togglePopup","fetchBuilds","errorsCount","dispatch","requestUrl","URL","search","URLSearchParams","toString","console","log","fetch","then","json","a","data","error","Promise","r","setTimeout","fetchDetails","buildId","isNeedDispatchInEnd","history","fetchLog","startNewBuild","commitHash","method","id","details","newBuildId","getBuildsData","builds","getDetails","getLog","getNewBuildId","Header","title","buttons","useDispatch","length","buttonProps","buttonKey","onClickFn","rebuild","IndexPage","useEffect","document","saveSettings","headers","body","JSON","stringify","goBack","fetchSettings","fetchLanguageDictionary","Input","labelBefore","labelAfter","placeholder","name","required","inputMode","pattern","forwardRef","isClearButtonVisible","filter","useState","valueFromState","setValueFromState","htmlFor","Number","onChange","event","target","ref","Form","repositoryNameRef","useRef","buildCommandRef","mainBranchRef","periodRef","repositoryName","repoName","buildCommand","mainBranch","period","handleSubmit","preventDefault","current","onSubmit","SettingsPage","Card","buildNumber","commitMessage","branchName","authorName","status","start","duration","to","full","short","formattedDate","setFormattedDate","split","rawDate","rawTime","monthsNames","year","monthNumber","day","hour","minutes","monthName","formatDate","formattedDuration","setFormattedDuration","ellipseStr","str","maxLength","slice","hours","Math","floor","hoursStr","minutesStr","formatBuildTime","formattedBranchName","setFormattedBranchName","formattedAuthorName","setFormattedAuthorName","formattedCommitHash","setFormattedCommitHash","CardTag","Link","BuildList","buildsData","limit","onShowMoreClick","useCallback","fetchMoreBuilds","offset","correctStatus","BuildHistoryPage","settingsConfig","BuildLog","logString","dangerouslySetInnerHTML","__html","Loader","Convert","require","BuildDetails","useParams","logStringHtml","setLogStringHtml","convert","fg","bg","some","buildData","all","detailsData","logData","fetchBuildDetailsAndLog","toHtml","setCorrectStatus","correct","BuildDetailsPage","NotFound","NotFoundPage","Footer","onChangeCurrentLangClick","newLanguage","window","localStorage","setItem","isAppLoading","isPopupActive","getIsInProgress","getIsAppLoading","getIsPopupActive","Popup","commitHashRef","trim","App","isFetching","getItem","settingsData","languageDictionaryData","go","fetchSettingsBeforeUsingApp","root","getElementById","classList","add","remove","exact","path","render","location","pathname","from","Boolean","hostname","match","ErrorBoundary","hasError","errorInfo","this","SITE_NAME","children","Component","combineReducers","action","lastBuild","lastBuildNumber","correctLastNewBuilds","i","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","rootElement","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.93b8a534.chunk.js","sourcesContent":["export default {\n  APP_LOADING: \"APP_LOADING\",\n  POPUP: \"POPUP\",\n  DETAILS: \"DETAILS\",\n  FETCH_CONFIG: \"FETCH_CONFIG\",\n  SAVE_CONFIG: \"SAVE_CONFIG\",\n  FETCH_LANGUAGE_DICTIONARY: \"FETCH_LANGUAGE_DICTIONARY\",\n  TOGGLE_PROGRESS: \"TOGGLE_PROGRESS\",\n  FETCH_BUILDS: \"FETCH_BUILDS\",\n  FETCH_MORE_BUILDS: \"FETCH_MORE_BUILDS\",\n  DETAILS_BUILD: \"DETAILS_BUILD\",\n  LOG_BUILD: \"LOG_BUILD\",\n  NEW_BUILD_ID: \"NEW_BUILD_ID\",\n\n  INDEX_PAGE_HEADER: \"INDEX_PAGE_HEADER\",\n  BUILD_LOG_PAGE_HEADER: \"BUILD_LOG_PAGE_HEADER\",\n  SETTINGS_PAGE_HEADER: \"SETTINGS_PAGE_HEADER\",\n  BUILD_DETAILS_PAGE_HEADER: \"BUILD_DETAILS_PAGE_HEADER\",\n  GO_TO_SETTINGS: \"GO_TO_SETTINGS\",\n  RUN_BUILD: \"RUN_BUILD\",\n  REBUILD: \"REBUILD\",\n\n  SERVER_API: \"http://localhost:9999/api\",\n};\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","export default (blockName = \"\", modifiers = []) =>\n  modifiers\n    .map(\n      ([modifierName, modifierValue]) =>\n        `${blockName}_${modifierName}${\n          [undefined, false, null].includes(modifierValue)\n            ? \"\"\n            : `_${modifierValue}`\n        }`\n    )\n    .join(\" \");\n","import React from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Icon.scss\";\n\nfunction Icon(props) {\n  const blockName = \"Icon\";\n  const { className = \"\", modifiers = [], onClick } = props;\n\n  return (\n    <div\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n      onClick={onClick}\n    />\n  );\n}\n\nexport default Icon;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Icon from \"../Icon/Icon\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Button.scss\";\n\nfunction Button(props) {\n  const blockName = \"Button\";\n  const {\n    className = \"\",\n    modifiers = [],\n    onClick = () => {},\n    text = null,\n    iconType = null,\n    type = \"button\",\n  } = props;\n\n  const isInProgress = useSelector((state) => state.common.isInProgress);\n\n  return (\n    <button\n      type={type}\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )} ${isInProgress ? `${blockName}_disabled` : \"\"}`}\n      onClick={onClick}\n    >\n      {iconType && (\n        <Icon\n          className={`${blockName}-Icon`}\n          modifiers={[[\"type\", iconType]]}\n        />\n      )}\n      {text && <div className={`${blockName}-Text`}>{text}</div>}\n    </button>\n  );\n}\n\nexport default Button;\n","import constants from \"../../utils/constants\";\n\nconst defaultState = {\n  config: {},\n  dictionary: {},\n};\n\nexport default function (state = defaultState, action) {\n  switch (action.type) {\n    case constants.SAVE_CONFIG:\n      const { repoName, buildCommand, mainBranch, period } = action.payload;\n      return {\n        ...state,\n        config: {\n          repoName,\n          buildCommand,\n          mainBranch,\n          period,\n        },\n      };\n    case constants.FETCH_CONFIG:\n      return {\n        ...state,\n        config: { ...action.payload },\n      };\n    case constants.FETCH_LANGUAGE_DICTIONARY:\n      return {\n        ...state,\n        dictionary: { ...action.payload },\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getSettingsConfig = (state) => state.settings.config;\nexport const getLanguageDictionary = (state) => state.settings.dictionary;\nexport const getCurrentLanguge = (state) =>\n  state.settings.dictionary.CURRENT_LANG || \"en\";\n","function pForm(count) {\n  const lastNumber = count % 10;\n  const lastNumbers = count % 100;\n\n  if (lastNumber === 1 && lastNumbers !== 11) {\n    return \"one\";\n  }\n  if (\n    lastNumber > 1 &&\n    lastNumber < 5 &&\n    (lastNumbers < 10 || lastNumbers > 20)\n  ) {\n    return \"few\";\n  }\n  return \"many\";\n}\n\nconst forms = {\n  ru: pForm,\n  en: (count) => (count === 1 ? \"one\" : \"many\"),\n};\n\nfunction generateText(msg, params) {\n  const res = [];\n  let tmp = \"\";\n  for (const char of msg) {\n    switch (char) {\n      default:\n        tmp += char;\n        break;\n      case \"{\":\n        res.push(tmp);\n        tmp = \"\";\n        break;\n      case \"}\":\n        res.push(params[tmp]);\n        tmp = \"\";\n        break;\n    }\n  }\n  tmp && res.push(tmp);\n  return res.join(\"\");\n}\n\nfunction i18n(dictionary, lang = \"en\", key, params) {\n  const value = dictionary[key];\n\n  if (typeof value === \"string\") {\n    return generateText(value, params);\n  }\n\n  const form = value[forms[lang](params.count)];\n  return generateText(form, params);\n}\n\nexport default i18n;\n","import React from \"react\";\nimport Button from \"../../components/Button/Button\";\nimport Icon from \"../../components/Icon/Icon\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./WithoutConfiguration.scss\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport { useSelector } from \"react-redux\";\nimport i18n from \"../../utils/i18n\";\n\nfunction WithoutConfiguration(props) {\n  const blockName = \"WithoutConfiguration\";\n  const { className = \"\", modifiers = [], actionFn } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  return (\n    <main\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        <Icon\n          className={`${blockName}-Logo`}\n          modifiers={[[\"type\", \"settingsLogo\"]]}\n        />\n        <div className={`${blockName}-Description Text`}>\n          {i18n(dictionary, currentLanguage, \"WITHOUT_CONFIG_DESC\")}\n        </div>\n        <Button\n          className={`${blockName}-Button`}\n          modifiers={[[\"color\", \"accent\"]]}\n          onClick={actionFn}\n          text={i18n(dictionary, currentLanguage, \"OPEN_SETTINGS\")}\n        />\n      </div>\n    </main>\n  );\n}\n\nexport default WithoutConfiguration;\n","import constants from \"../../utils/constants\";\n\nexport const toggleProgress = (isInProgress) => ({\n  type: constants.TOGGLE_PROGRESS,\n  payload: isInProgress,\n});\n\nexport const toggleAppLoading = (bool) => ({\n  type: constants.APP_LOADING,\n  payload: bool,\n});\n\nexport const togglePopup = (bool) => ({\n  type: constants.POPUP,\n  payload: bool,\n});\n","import constants from \"../../utils/constants\";\nimport history from \"../../history\";\nimport { togglePopup, toggleProgress } from \"./commonActions\";\n\nexport const fetchBuilds = (params, errorsCount = 0) => (dispatch) => {\n  const requestUrl = new URL(`${constants.SERVER_API}/builds`);\n  requestUrl.search = new URLSearchParams(params).toString();\n  console.log(\"fetchBuilds: \", requestUrl);\n  return fetch(requestUrl)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchBuilds(params, errorsCount)(dispatch);\n        }\n      } else {\n        dispatch({\n          type: constants.FETCH_BUILDS,\n          payload: data,\n        });\n      }\n    });\n};\n\nexport const fetchMoreBuilds = (params, errorsCount = 0) => (dispatch) => {\n  dispatch(toggleProgress(true));\n\n  const requestUrl = new URL(`${constants.SERVER_API}/builds`);\n  requestUrl.search = new URLSearchParams(params).toString();\n  console.log(\"fetchMoreBuilds: \", requestUrl);\n  return fetch(requestUrl)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchMoreBuilds(params, errorsCount)(dispatch);\n        }\n      } else {\n        dispatch({\n          type: constants.FETCH_MORE_BUILDS,\n          payload: data,\n        });\n      }\n\n      dispatch(toggleProgress(false));\n    });\n};\n\nexport const fetchDetails = (\n  buildId,\n  errorsCount = 0,\n  isNeedDispatchInEnd = false\n) => (dispatch) => {\n  console.log(\"fetchDetails: \", buildId);\n  return fetch(`${constants.SERVER_API}/builds/${buildId}`)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchDetails(\n            buildId,\n            errorsCount,\n            isNeedDispatchInEnd\n          )(dispatch);\n        }\n\n        if (isNeedDispatchInEnd) {\n          // if wrong buildId passed need to redirect on / page\n          history.push(\"/\");\n        }\n\n        return null;\n      }\n\n      if (isNeedDispatchInEnd) {\n        dispatch({\n          type: constants.DETAILS_BUILD,\n          payload: data,\n        });\n      } else {\n        return data;\n      }\n    });\n};\n\nexport const fetchLog = (\n  buildId,\n  errorsCount = 0,\n  isNeedDispatchInEnd = false\n) => (dispatch) => {\n  console.log(\"fetchLog: \", buildId);\n  return fetch(`${constants.SERVER_API}/builds/${buildId}/logs`)\n    .then((res) => res.json())\n    .then(async (data) => {\n      if (data.error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchLog(buildId, errorsCount, isNeedDispatchInEnd)(dispatch);\n        }\n\n        if (isNeedDispatchInEnd) {\n          // if wrong buildId passed need to redirect on / page\n          history.push(\"/\");\n        }\n\n        return null;\n      }\n\n      if (isNeedDispatchInEnd) {\n        dispatch({\n          type: constants.LOG_BUILD,\n          payload: data,\n        });\n      } else {\n        return data;\n      }\n    });\n};\n\nexport const fetchBuildDetailsAndLog = (buildId) => async (dispatch) => {\n  dispatch(toggleProgress(true));\n\n  const [detailsData, logData] = await Promise.all([\n    fetchDetails(buildId)(dispatch),\n    fetchLog(buildId)(dispatch),\n  ]);\n\n  if (logData === null || detailsData === null) {\n    dispatch(toggleProgress(false));\n    // if wrong buildId passed need to redirect on / page\n    history.push(\"/\");\n    return null;\n  }\n\n  dispatch({\n    type: constants.LOG_BUILD,\n    payload: logData,\n  });\n  dispatch({\n    type: constants.DETAILS_BUILD,\n    payload: detailsData,\n  });\n  dispatch(toggleProgress(false));\n};\n\nexport const startNewBuild = (commitHash = \"\", errorsCount = 0) => (\n  dispatch\n) => {\n  console.log(\"try to add build by commit: \", commitHash);\n  dispatch(toggleProgress(true));\n\n  return fetch(`${constants.SERVER_API}/builds/${commitHash}`, {\n    method: \"POST\",\n  })\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return startNewBuild(commitHash, errorsCount)(dispatch);\n        }\n\n        dispatch(toggleProgress(false));\n        dispatch(togglePopup(false));\n        return null;\n      }\n\n      dispatch({\n        type: constants.DETAILS_BUILD,\n        payload: {},\n      });\n      dispatch({\n        type: constants.NEW_BUILD_ID,\n        payload: data.id,\n      });\n      dispatch(toggleProgress(false));\n      dispatch(togglePopup(false));\n      // переход на страницу деталей по только что добавленному новому билду\n      history.push(`/build/${data.id}`);\n    });\n};\n\nexport const rebuild = (commitHash = \"\", errorsCount = 0) => (dispatch) => {\n  console.log(\"try to rebuild build by commit: \", commitHash);\n  dispatch(toggleProgress(true));\n\n  return fetch(`${constants.SERVER_API}/builds/${commitHash}`, {\n    method: \"POST\",\n  })\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return rebuild(commitHash, errorsCount)(dispatch);\n        }\n\n        dispatch(toggleProgress(false));\n        return null;\n      }\n\n      dispatch({\n        type: constants.DETAILS_BUILD,\n        payload: {},\n      });\n      dispatch({\n        type: constants.NEW_BUILD_ID,\n        payload: data.id,\n      });\n      dispatch(toggleProgress(false));\n      // переход на страницу деталей по только что добавленному новому билду\n      history.push(`/build/${data.id}`);\n    });\n};\n","import constants from \"../../utils/constants\";\n\nconst defaultState = {\n  data: [],\n  details: null,\n  log: null,\n  newBuildId: null,\n};\n\nexport default function (state = defaultState, action) {\n  switch (action.type) {\n    case constants.FETCH_BUILDS:\n      return {\n        ...state,\n        data: [...action.payload],\n      };\n    case constants.FETCH_MORE_BUILDS:\n      const lastBuild = state.data[state.data.length - 1];\n      const lastBuildNumber = lastBuild ? lastBuild.buildNumber : -1;\n\n      const correctLastNewBuilds = [];\n      for (let i = 0; i < action.payload.length; i++) {\n        if (action.payload[i].buildNumber >= lastBuildNumber) continue;\n\n        correctLastNewBuilds.push(action.payload[i]);\n      }\n      return {\n        ...state,\n        data: [...state.data, ...correctLastNewBuilds],\n      };\n    case constants.DETAILS_BUILD:\n      return {\n        ...state,\n        details: {\n          ...action.payload,\n        },\n      };\n    case constants.LOG_BUILD:\n      return {\n        ...state,\n        log: action.payload,\n      };\n    case constants.NEW_BUILD_ID:\n      return {\n        ...state,\n        newBuildId: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getBuildsData = (state) => state.builds.data;\nexport const getDetails = (state) => state.builds.details;\nexport const getLog = (state) => state.builds.log;\nexport const getNewBuildId = (state) => state.builds.newBuildId;\n","import React from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport Button from \"../Button/Button\";\nimport history from \"../../history\";\nimport constants from \"../../utils/constants\";\nimport \"./Header.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { togglePopup } from \"../../store/actions/commonActions\";\nimport { rebuild } from \"../../store/actions/buildsActions\";\nimport { getDetails } from \"../../store/reducers/buildsReducer\";\n\nfunction Header(props) {\n  const blockName = \"Header\";\n  const {\n    className = \"\",\n    modifiers = [],\n    title = {\n      text: false,\n      modifiers: [],\n    },\n    buttons = [],\n  } = props;\n\n  const dispatch = useDispatch();\n  const details = useSelector(getDetails);\n\n  return (\n    <header\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        {title.text && (\n          <div\n            className={`${blockName}-Title Text ${processModifiers(\n              \"Text\",\n              title.modifiers\n            )}`}\n          >\n            {title.text}\n          </div>\n        )}\n        {buttons.length > 0 && (\n          <div className={`${blockName}-ButtonsBlock`}>\n            {buttons.map((buttonProps, buttonKey) => {\n              const { modifiers, onClick, text, iconType } = buttonProps;\n\n              let onClickFn;\n              switch (onClick) {\n                case constants.GO_TO_SETTINGS:\n                  onClickFn = () => history.push(\"/settings\");\n                  break;\n                case constants.RUN_BUILD:\n                  onClickFn = () => {\n                    dispatch(togglePopup(true));\n                  };\n                  break;\n                case constants.REBUILD:\n                  onClickFn = () => {\n                    dispatch(rebuild(details.commitHash));\n                  };\n                  break;\n                default:\n                  break;\n              }\n\n              return (\n                <Button\n                  key={buttonKey}\n                  className={`${blockName}-Button`}\n                  modifiers={modifiers}\n                  onClick={onClickFn}\n                  text={text}\n                  iconType={iconType}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport constants from \"../../utils/constants\";\nimport history from \"../../history\";\nimport WithoutConfiguration from \"../../components/WithoutConfiguration/WithoutConfiguration\";\nimport Header from \"../../components/Header/Header\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport i18n from \"../../utils/i18n\";\n\nfunction IndexPage(props) {\n  const { className = \"\", modifiers = [] } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  useEffect(() => {\n    document.title = i18n(dictionary, currentLanguage, \"SITE_NAME\");\n  }, [dictionary, currentLanguage]);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: i18n(dictionary, currentLanguage, \"SITE_NAME\"),\n          modifiers: [[\"type\", \"headerTitle\"]],\n        }}\n        buttons={[\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"before\"],\n            ],\n            onClick: constants.GO_TO_SETTINGS,\n            text: i18n(dictionary, currentLanguage, \"SETTINGS\"),\n            iconType: \"settings\",\n          },\n        ]}\n      />\n      <WithoutConfiguration\n        className={className}\n        modifiers={modifiers}\n        actionFn={() => history.push(\"/settings\")}\n      />\n    </>\n  );\n}\n\nexport default IndexPage;\n","import constants from \"../../utils/constants\";\nimport history from \"../../history\";\nimport { toggleAppLoading, toggleProgress } from \"./commonActions\";\nimport { fetchBuilds } from \"./buildsActions\";\n\nexport const saveSettings = (config, errorsCount = 0) => (dispatch) => {\n  dispatch(toggleProgress(true));\n\n  return fetch(`${constants.SERVER_API}/settings`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(config),\n  })\n    .then((res) => res.json())\n    .then(async ({ error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return saveSettings(config, errorsCount)(dispatch);\n        }\n      } else {\n        dispatch({\n          type: constants.SAVE_CONFIG,\n          payload: config,\n        });\n      }\n\n      dispatch(toggleProgress(false));\n      history.goBack();\n    });\n};\n\nexport const fetchSettings = (errorsCount = 0, isNeedDispatchInEnd = false) => (\n  dispatch\n) => {\n  console.log(\"fetchSettings\");\n  return fetch(`${constants.SERVER_API}/settings`)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchSettings(errorsCount, isNeedDispatchInEnd)(dispatch);\n        }\n        return null;\n      }\n\n      if (isNeedDispatchInEnd) {\n        dispatch({\n          type: constants.FETCH_CONFIG,\n          payload: data,\n        });\n      } else {\n        return data;\n      }\n    });\n};\n\nexport const fetchLanguageDictionary = (\n  lang = \"en\",\n  errorsCount = 0,\n  isNeedDispatchInEnd = false\n) => (dispatch) => {\n  console.log(\"fetchLanguage\" + lang);\n  return fetch(`${constants.SERVER_API}/language?lang=${lang}`)\n    .then((res) => res.json())\n    .then(async ({ data, error }) => {\n      if (error) {\n        errorsCount++;\n        if (errorsCount < 10) {\n          await new Promise((r) => setTimeout(r, 1000));\n          return fetchLanguageDictionary(\n            lang,\n            errorsCount,\n            isNeedDispatchInEnd\n          )(dispatch);\n        }\n        return null;\n      }\n\n      if (isNeedDispatchInEnd) {\n        dispatch({\n          type: constants.FETCH_LANGUAGE_DICTIONARY,\n          payload: data,\n        });\n      } else {\n        return data;\n      }\n    });\n};\n\nexport const fetchSettingsBeforeUsingApp = (lang = \"en\") => async (\n  dispatch\n) => {\n  lang = window.localStorage.getItem(\"shri_ci_lang\") || \"en\";\n\n  const [settingsData, languageDictionaryData] = await Promise.all([\n    fetchSettings()(dispatch),\n    fetchLanguageDictionary(lang)(dispatch),\n  ]);\n\n  dispatch({\n    type: constants.FETCH_LANGUAGE_DICTIONARY,\n    payload: languageDictionaryData || {},\n  });\n\n  if (settingsData === null) {\n    history.go();\n    return;\n  }\n\n  if (settingsData.repoName) {\n    await fetchBuilds({ limit: 10 })(dispatch);\n  }\n\n  dispatch({\n    type: constants.FETCH_CONFIG,\n    payload: settingsData,\n  });\n\n  dispatch(toggleAppLoading(false));\n};\n","import React, { useState } from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Input.scss\";\nimport { useSelector } from \"react-redux\";\nimport i18n from \"../../utils/i18n\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\n\nfunction Input(props) {\n  const blockName = \"Input\";\n  const {\n    className = \"\",\n    modifiers = [],\n    labelBefore = {\n      text: false,\n      className: \"\",\n      modifiers: [],\n    },\n    labelAfter = {\n      text: false,\n      className: \"\",\n      modifiers: [],\n    },\n    id,\n    type = \"text\",\n    placeholder = null,\n    name,\n    required = false,\n    inputMode,\n    value = \"\",\n    pattern,\n    forwardRef,\n  } = props;\n\n  const isClearButtonVisible =\n    modifiers.filter(\n      ([modifierName, modifierValue]) =>\n        modifierName === \"clear\" && modifierValue === \"visible\"\n    ).length > 0;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  const [valueFromState, setValueFromState] = useState(value);\n\n  const handleChange = (event) => setValueFromState(event.target.value);\n  const handleClear = () => setValueFromState(\"\");\n\n  const isInProgress = useSelector((state) => state.common.isInProgress);\n\n  return (\n    <>\n      {labelBefore.text && (\n        <label\n          htmlFor={id}\n          className={`${labelBefore.className} Text ${processModifiers(\n            \"Text\",\n            labelBefore.modifiers\n          )}`}\n        >\n          {i18n(dictionary, currentLanguage, labelBefore.text, {\n            count: Number(valueFromState) || 0,\n          })}\n        </label>\n      )}\n      <div\n        className={`${className} ${blockName} ${processModifiers(\n          blockName,\n          modifiers\n        )} ${isInProgress ? `${blockName}_disabled` : \"\"}`}\n      >\n        <input\n          id={id}\n          className={`${blockName}-Control`}\n          type={type}\n          placeholder={placeholder}\n          name={name}\n          required={required}\n          onChange={handleChange}\n          value={valueFromState}\n          inputMode={inputMode}\n          pattern={pattern}\n          ref={forwardRef}\n        />\n        {isClearButtonVisible && (\n          <Icon\n            className={`${blockName}-ClearIcon`}\n            modifiers={[[\"type\", \"clear\"]]}\n            onClick={handleClear}\n          />\n        )}\n      </div>\n      {labelAfter.text && (\n        <label\n          htmlFor={id}\n          className={`${labelAfter.className} Text ${processModifiers(\n            \"Text\",\n            labelAfter.modifiers\n          )}`}\n        >\n          {i18n(dictionary, currentLanguage, labelAfter.text, {\n            count: Number(valueFromState) || 0,\n          })}\n        </label>\n      )}\n    </>\n  );\n}\n\nexport default Input;\n","import React, { useRef } from \"react\";\nimport history from \"../../history\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport { saveSettings } from \"../../store/actions/settingsActions\";\nimport Button from \"../../components/Button/Button\";\nimport Input from \"../../components/Input/Input\";\nimport \"./Form.scss\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport i18n from \"../../utils/i18n\";\n\nfunction Form(props) {\n  const blockName = \"Form\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  const dispatch = useDispatch();\n\n  const repositoryNameRef = useRef(null);\n  const buildCommandRef = useRef(null);\n  const mainBranchRef = useRef(null);\n  const periodRef = useRef(null);\n\n  const repositoryName = useSelector((state) =>\n    state.settings.config.repoName ? state.settings.config.repoName : \"\"\n  );\n  const buildCommand = useSelector((state) =>\n    state.settings.config.buildCommand ? state.settings.config.buildCommand : \"\"\n  );\n  const mainBranch = useSelector((state) =>\n    state.settings.config.mainBranch ? state.settings.config.mainBranch : \"\"\n  );\n  const period = useSelector((state) =>\n    state.settings.config.period ? state.settings.config.period : \"10\"\n  );\n\n  const handleSubmit = async (event) => {\n    event && event.preventDefault();\n\n    const config = {\n      repoName: repositoryNameRef.current.value,\n      buildCommand: buildCommandRef.current.value,\n      mainBranch: mainBranchRef.current.value,\n      period: periodRef.current.value,\n    };\n    console.log(\"config: \", config);\n\n    dispatch(saveSettings(config));\n  };\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  return (\n    <form\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n      onSubmit={handleSubmit}\n    >\n      <div className={`${blockName}-Content`}>\n        <div className={`${blockName}-Item ${blockName}-Item_type_header`}>\n          <div className={`${blockName}-Label Text Text_type_formHeader`}>\n            {i18n(dictionary, currentLanguage, \"SETTINGS\")}\n          </div>\n          <div className=\"Text\">\n            {i18n(dictionary, currentLanguage, \"CONFIGURE_REP\")}{\" \"}\n            <span className=\"Text-NonBreakable\">\n              {i18n(dictionary, currentLanguage, \"AND_SYNC_SETTINGS\")}\n            </span>\n          </div>\n        </div>\n        <div className={`${blockName}-Item`}>\n          <Input\n            className={`${blockName}-Input`}\n            modifiers={[[\"clear\", \"visible\"]]}\n            labelBefore={{\n              text: \"GITHUB_REP\",\n              className: `${blockName}-Label ${blockName}-Label_type_required`,\n              modifiers: [[\"type\", \"formLabel\"]],\n            }}\n            id=\"repository\"\n            type=\"text\"\n            placeholder=\"user-name/repo-name\"\n            name=\"repository\"\n            required\n            value={repositoryName}\n            forwardRef={repositoryNameRef}\n          />\n        </div>\n        <div className={`${blockName}-Item`}>\n          <Input\n            className={`${blockName}-Input`}\n            modifiers={[[\"clear\", \"visible\"]]}\n            labelBefore={{\n              text: \"BUILD_COMMAND\",\n              className: `${blockName}-Label`,\n              modifiers: [[\"type\", \"formLabel\"]],\n            }}\n            id=\"command\"\n            type=\"text\"\n            placeholder=\"npm ci && npm run build\"\n            name=\"command\"\n            required\n            value={buildCommand}\n            forwardRef={buildCommandRef}\n          />\n        </div>\n        <div className={`${blockName}-Item`}>\n          <Input\n            className={`${blockName}-Input`}\n            modifiers={[[\"clear\", \"visible\"]]}\n            labelBefore={{\n              text: \"MAIN_BRANCH\",\n              className: `${blockName}-Label`,\n              modifiers: [[\"type\", \"formLabel\"]],\n            }}\n            id=\"branch\"\n            type=\"text\"\n            placeholder=\"master\"\n            name=\"branch\"\n            required\n            value={mainBranch}\n            forwardRef={mainBranchRef}\n          />\n        </div>\n        <div className={`${blockName}-Item ${blockName}-Item_type_flat`}>\n          <Input\n            className={`${blockName}-Input`}\n            modifiers={[\n              [\"size\", \"small\"],\n              [\"align\", \"right\"],\n            ]}\n            labelBefore={{\n              text: \"SYNC_EVERY\",\n              className: `${blockName}-Label`,\n              modifiers: [],\n            }}\n            labelAfter={{\n              text: \"MINUTE\",\n              className: `${blockName}-Label`,\n              modifiers: [],\n            }}\n            id=\"minutes\"\n            type=\"text\"\n            inputMode=\"numeric\"\n            pattern=\"^[0]*[1-9][\\d]*$\"\n            name=\"minutes\"\n            required\n            value={period}\n            forwardRef={periodRef}\n          />\n        </div>\n        <div className={`${blockName}-Item`}>\n          <div className={`${blockName}-ButtonsBlock`}>\n            <Button\n              className={`${blockName}-Button`}\n              modifiers={[[\"color\", \"accent\"]]}\n              text={i18n(dictionary, currentLanguage, \"SAVE\")}\n              type=\"submit\"\n            />\n            <Button\n              type=\"button\"\n              className={`${blockName}-Button`}\n              onClick={handleCancel}\n              text={i18n(dictionary, currentLanguage, \"CANCEL\")}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useEffect } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport Form from \"../../components/Form/Form\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport i18n from \"../../utils/i18n\";\n\nfunction SettingsPage(props) {\n  const { className = \"\", modifiers = [] } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  useEffect(() => {\n    document.title = `${i18n(dictionary, currentLanguage, \"SETTINGS\")} | ${i18n(\n      dictionary,\n      currentLanguage,\n      \"SITE_NAME\"\n    )}`;\n  }, [dictionary, currentLanguage]);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: i18n(dictionary, currentLanguage, \"SITE_NAME\"),\n          modifiers: [[\"type\", \"headerTitle\"]],\n        }}\n      />\n      <Form className={className} modifiers={modifiers} />\n    </>\n  );\n}\n\nexport default SettingsPage;\n","import React, { useEffect, useState } from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport { Link } from \"react-router-dom\";\nimport \"./Card.scss\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport i18n from \"../../utils/i18n\";\n\nfunction Card(props) {\n  const blockName = \"Card\";\n  const {\n    className = \"\",\n    modifiers = [],\n    // buildId,\n    buildNumber,\n    commitMessage = \"\",\n    branchName = \"\",\n    commitHash = \"\",\n    authorName = \"\",\n    status,\n    start,\n    duration,\n    to,\n  } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  const [formattedDate, setFormattedDate] = useState({ full: \"\", short: \"\" });\n  useEffect(() => {\n    if (!start) return;\n\n    const [rawDate, rawTime] = start.split(\"T\");\n\n    const monthsNames = {\n      \"01\": i18n(dictionary, currentLanguage, \"JANUARY\"),\n      \"02\": i18n(dictionary, currentLanguage, \"FEBRUARY\"),\n      \"03\": i18n(dictionary, currentLanguage, \"MARCH\"),\n      \"04\": i18n(dictionary, currentLanguage, \"APRIL\"),\n      \"05\": i18n(dictionary, currentLanguage, \"MAY\"),\n      \"06\": i18n(dictionary, currentLanguage, \"JUNE\"),\n      \"07\": i18n(dictionary, currentLanguage, \"JULY\"),\n      \"08\": i18n(dictionary, currentLanguage, \"AUGUST\"),\n      \"09\": i18n(dictionary, currentLanguage, \"SEPTEMBER\"),\n      \"10\": i18n(dictionary, currentLanguage, \"OCTOBER\"),\n      \"11\": i18n(dictionary, currentLanguage, \"NOVEMBER\"),\n      \"12\": i18n(dictionary, currentLanguage, \"DECEMBER\"),\n    };\n\n    const formatDate = (rawDate, rawTime) => {\n      const [year, monthNumber, day] = rawDate.split(\"-\");\n      const [hour, minutes] = rawTime.split(\":\");\n      const monthName = monthsNames[monthNumber];\n\n      return {\n        full: `${day} ${monthName} ${year}, ${hour}:${minutes}`,\n        short: `${day} ${monthName}, ${hour}:${minutes}`,\n      };\n    };\n\n    setFormattedDate(formatDate(rawDate, rawTime));\n  }, [start, dictionary, currentLanguage]);\n\n  const [formattedDuration, setFormattedDuration] = useState(\"\");\n  useEffect(() => {\n    if (!duration) return;\n\n    const formatBuildTime = (duration) => {\n      const hours = Math.floor(duration / 60);\n      const minutes = duration % 60;\n\n      const hoursStr = hours\n        ? `${hours} ${i18n(dictionary, currentLanguage, \"HOURS_SHORT\")}`\n        : \"\";\n      const minutesStr = minutes\n        ? `${minutes} ${i18n(dictionary, currentLanguage, \"MINUTES_SHORT\")}`\n        : \"\";\n\n      return `${hoursStr}${hours && minutes ? \" \" : \"\"}${minutesStr}`;\n    };\n\n    setFormattedDuration(formatBuildTime(duration));\n  }, [duration, dictionary, currentLanguage]);\n\n  function ellipseStr(str, maxLength) {\n    if (str.length > maxLength) {\n      return str.slice(0, maxLength - 1) + \"...\";\n    }\n\n    return str;\n  }\n\n  const [formattedBranchName, setFormattedBranchName] = useState(\"\");\n  useEffect(() => {\n    if (!branchName) return;\n\n    setFormattedBranchName(ellipseStr(branchName, 15));\n  }, [branchName]);\n\n  const [formattedAuthorName, setFormattedAuthorName] = useState(\"\");\n  useEffect(() => {\n    if (!authorName) return;\n\n    setFormattedAuthorName(ellipseStr(authorName, 15));\n  }, [authorName]);\n\n  const [formattedCommitHash, setFormattedCommitHash] = useState(\"\");\n  useEffect(() => {\n    if (!commitHash) return;\n\n    setFormattedCommitHash(commitHash.slice(0, 7));\n  }, [commitHash]);\n\n  const CardTag = to ? Link : \"div\";\n\n  return (\n    <CardTag\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n      to={to}\n    >\n      <div className={`${blockName}-Content`}>\n        <Icon className={`${blockName}-Icon`} modifiers={[[\"type\", status]]} />\n        <div className={`${blockName}-DataWrapper`}>\n          <div className={`${blockName}-Data`}>\n            <div className={`${blockName}-DataTitle`}>\n              <div className={`${blockName}-Number`}>#{buildNumber}</div>\n              <div className={`${blockName}-CommitName Text Text_type_commit`}>\n                {commitMessage}\n              </div>\n            </div>\n            <div className={`${blockName}-DataOther`}>\n              <div className={`${blockName}-OtherInfo`}>\n                <Icon\n                  className={`${blockName}-OtherIcon`}\n                  modifiers={[[\"type\", \"branch\"]]}\n                />\n                <div className={`${blockName}-OtherText Text Text_type_card`}>\n                  {formattedBranchName}\n                </div>\n                <div\n                  className={`${blockName}-OtherText ${blockName}-OtherText_type_hash Text Text_type_card`}\n                >\n                  {formattedCommitHash}\n                </div>\n              </div>\n              <div className={`${blockName}-OtherInfo`}>\n                <Icon\n                  className={`${blockName}-OtherIcon`}\n                  modifiers={[[\"type\", \"user\"]]}\n                />\n                <div className={`${blockName}-OtherText Text Text_type_card`}>\n                  {formattedAuthorName}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={`${blockName}-TimeBlock`}>\n            <div\n              className={`${blockName}-TimeItem ${\n                !formattedDate.short ? `${blockName}-TimeItem_hidden` : \"\"\n              }`}\n            >\n              <Icon\n                className={`${blockName}-TimeIcon`}\n                modifiers={[[\"type\", \"calendar\"]]}\n              />\n              <div\n                className={`${blockName}-TimeText Text Text_type_card`}\n                title={formattedDate.full || \"\"}\n              >\n                {formattedDate.short || \"\"}\n              </div>\n            </div>\n            <div\n              className={`${blockName}-TimeItem ${\n                !formattedDuration ? `${blockName}-TimeItem_hidden` : \"\"\n              }`}\n            >\n              <Icon\n                className={`${blockName}-TimeIcon`}\n                modifiers={[[\"type\", \"stopwatch\"]]}\n              />\n              <div className={`${blockName}-TimeText Text Text_type_card`}>\n                {formattedDuration || \"\"}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </CardTag>\n  );\n}\n\nexport default Card;\n","import React, { useEffect, useCallback } from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport Button from \"../Button/Button\";\nimport Card from \"../Card/Card\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./BuildList.scss\";\nimport { getBuildsData } from \"../../store/reducers/buildsReducer\";\nimport {\n  fetchBuilds,\n  fetchMoreBuilds,\n} from \"../../store/actions/buildsActions\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport i18n from \"../../utils/i18n\";\n\nfunction BuildList(props) {\n  const blockName = \"BuildList\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  const buildsData = useSelector(getBuildsData);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchBuilds({ limit: 10 }));\n    // eslint-disable-next-line\n  }, []);\n\n  const onShowMoreClick = useCallback(\n    () => dispatch(fetchMoreBuilds({ limit: 10, offset: buildsData.length })),\n    // eslint-disable-next-line\n    [buildsData.length]\n  );\n\n  return (\n    <main\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        {buildsData.map(\n          ({\n            status,\n            id,\n            buildNumber,\n            commitMessage,\n            branchName,\n            commitHash,\n            authorName,\n            start,\n            duration,\n          }) => {\n            let correctStatus;\n            switch (status) {\n              case \"InProgress\":\n              case \"Waiting\":\n                correctStatus = \"progress\";\n                break;\n              case \"Success\":\n                correctStatus = \"done\";\n                break;\n              case \"Fail\":\n              case \"Canceled\":\n              default:\n                correctStatus = \"fail\";\n                break;\n            }\n            return (\n              <Card\n                className={`${blockName}-Item`}\n                modifiers={[[\"type\", correctStatus]]}\n                buildId={id}\n                to={`/build/${id}`}\n                buildNumber={buildNumber}\n                commitMessage={commitMessage}\n                branchName={branchName}\n                commitHash={commitHash}\n                authorName={authorName}\n                start={start}\n                duration={duration}\n                key={id}\n                status={correctStatus}\n              />\n            );\n          }\n        )}\n\n        <Button\n          className={`${blockName}-Button`}\n          modifiers={[[\"type\", \"controlExtended\"]]}\n          text={i18n(dictionary, currentLanguage, \"SHOW_MORE\")}\n          onClick={onShowMoreClick}\n        />\n      </div>\n    </main>\n  );\n}\n\nexport default BuildList;\n","import React, { useEffect } from \"react\";\nimport constants from \"../../utils/constants\";\nimport Header from \"../../components/Header/Header\";\nimport BuildList from \"../../components/BuildList/BuildList\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getSettingsConfig,\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport i18n from \"../../utils/i18n\";\n\nfunction BuildHistoryPage(props) {\n  const { className = \"\" } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  useEffect(() => {\n    document.title = `${i18n(\n      dictionary,\n      currentLanguage,\n      \"BUILD_HISTORY\"\n    )} | ${i18n(dictionary, currentLanguage, \"SITE_NAME\")}`;\n  }, [dictionary, currentLanguage]);\n\n  const settingsConfig = useSelector(getSettingsConfig);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: settingsConfig.repoName,\n          modifiers: [[\"type\", \"repositoryName\"]],\n        }}\n        buttons={[\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"before\"],\n            ],\n            onClick: constants.RUN_BUILD,\n            text: i18n(dictionary, currentLanguage, \"RUN_BUILD\"),\n            iconType: \"play\",\n          },\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"only\"],\n            ],\n            onClick: constants.GO_TO_SETTINGS,\n            iconType: \"settings\",\n          },\n        ]}\n      />\n      <BuildList className={className} />\n    </>\n  );\n}\n\nexport default BuildHistoryPage;\n","import React from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./BuildLog.scss\";\n\nfunction BuildLog(props) {\n  const blockName = \"BuildLog\";\n  const { className = \"\", modifiers = [], logString = \"\" } = props;\n\n  return (\n    <pre\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n      dangerouslySetInnerHTML={{ __html: logString }}\n    />\n  );\n}\n\nexport default BuildLog;\n","import React from \"react\";\nimport \"./Loader.scss\";\n\nfunction Loader() {\n  return (\n    <div className=\"Loader\">\n      <div className=\"Loader-SpinerWrapper\">\n        <div className=\"Loader-Spiner\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, { useEffect } from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport Card from \"../Card/Card\";\nimport BuildLog from \"../BuildLog/BuildLog\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport \"./BuildDetails.scss\";\nimport { fetchBuildDetailsAndLog } from \"../../store/actions/buildsActions\";\nimport {\n  getDetails,\n  getLog,\n  getBuildsData,\n  getNewBuildId,\n} from \"../../store/reducers/buildsReducer\";\nimport { useState } from \"react\";\nimport Loader from \"../Loader/Loader\";\nimport history from \"../../history\";\n\nconst Convert = require(\"ansi-to-html\");\n\nfunction BuildDetails(props) {\n  const blockName = \"BuildDetails\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const { buildId } = useParams();\n\n  const buildsData = useSelector(getBuildsData);\n  const newBuildId = useSelector(getNewBuildId);\n  const details = useSelector(getDetails);\n  const log = useSelector(getLog);\n\n  const [logStringHtml, setLogStringHtml] = useState(\"\");\n\n  const convert = new Convert({\n    fg: \"#000\",\n    bg: \"#000\",\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // check if buildId in buildsData or it is newBuildId\n    if (\n      newBuildId === buildId ||\n      buildsData.some((buildData) => buildData.id === buildId)\n    ) {\n      dispatch(fetchBuildDetailsAndLog(buildId));\n    } else {\n      history.push(\"/\");\n    }\n    // eslint-disable-next-line\n  }, [buildId, buildsData, newBuildId]);\n\n  useEffect(() => {\n    setLogStringHtml(convert.toHtml(log || \"\"));\n  }, [log, convert]);\n\n  const [correctStatus, setCorrectStatus] = useState(\"\");\n  useEffect(() => {\n    if (!details) return;\n\n    let correct;\n    switch (details.status) {\n      case \"InProgress\":\n      case \"Waiting\":\n        correct = \"progress\";\n        break;\n      case \"Success\":\n        correct = \"done\";\n        break;\n      case \"Fail\":\n      case \"Canceled\":\n      default:\n        correct = \"fail\";\n        break;\n    }\n\n    setCorrectStatus(correct);\n  }, [details]);\n\n  return (\n    <main\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        {details && details.id === buildId ? (\n          <>\n            <Card\n              className={`${blockName}-Item`}\n              modifiers={[\n                [\"type\", correctStatus],\n                [\"page\", \"details\"],\n              ]}\n              buildId={details.id}\n              buildNumber={details.buildNumber}\n              commitMessage={details.commitMessage}\n              branchName={details.branchName}\n              commitHash={details.commitHash}\n              authorName={details.authorName}\n              start={details.start}\n              duration={details.duration}\n              status={correctStatus}\n            />\n            {logStringHtml && <BuildLog logString={logStringHtml} />}\n          </>\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </main>\n  );\n}\n\nexport default BuildDetails;\n","import React, { useEffect } from \"react\";\nimport constants from \"../../utils/constants\";\nimport BuildDetails from \"../../components/BuildDetails/BuildDetails\";\nimport { useSelector } from \"react-redux\";\nimport Header from \"../../components/Header/Header\";\nimport {\n  getSettingsConfig,\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport i18n from \"../../utils/i18n\";\n\nfunction BuildDetailsPage(props) {\n  const { className = \"\" } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  useEffect(() => {\n    document.title = `${i18n(\n      dictionary,\n      currentLanguage,\n      \"BUILD_DETAILS\"\n    )} | ${i18n(dictionary, currentLanguage, \"SITE_NAME\")}`;\n  }, [dictionary, currentLanguage]);\n\n  const settingsConfig = useSelector(getSettingsConfig);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: settingsConfig.repoName,\n          modifiers: [[\"type\", \"repositoryName\"]],\n        }}\n        buttons={[\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"before\"],\n            ],\n            onClick: constants.REBUILD,\n            text: i18n(dictionary, currentLanguage, \"REBUILD\"),\n            iconType: \"restart\",\n          },\n          {\n            modifiers: [\n              [\"type\", \"control\"],\n              [\"icon\", \"only\"],\n            ],\n            onClick: constants.GO_TO_SETTINGS,\n            iconType: \"settings\",\n          },\n        ]}\n      />\n      <BuildDetails className={className} />\n    </>\n  );\n}\n\nexport default BuildDetailsPage;\n","import React from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"./NotFound.scss\";\nimport i18n from \"../../utils/i18n\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\n\nfunction NotFound(props) {\n  const blockName = \"NotFound\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  return (\n    <main\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        {i18n(dictionary, currentLanguage, \"ERROR_404\")}{\" \"}\n        <Link to=\"/\">\n          {i18n(dictionary, currentLanguage, \"GO_TO_HOME_PAGE\")}\n        </Link>\n        .\n      </div>\n    </main>\n  );\n}\n\nexport default NotFound;\n","import React, { useEffect } from \"react\";\nimport NotFound from \"../../components/NotFound/NotFound\";\nimport Header from \"../../components/Header/Header\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport i18n from \"../../utils/i18n\";\n\nfunction NotFoundPage(props) {\n  const { className = \"\", modifiers = [] } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  useEffect(() => {\n    document.title = `${i18n(\n      dictionary,\n      currentLanguage,\n      \"PAGE_NOT_FOUND\"\n    )} | ${i18n(dictionary, currentLanguage, \"SITE_NAME\")}`;\n  }, [dictionary, currentLanguage]);\n\n  return (\n    <>\n      <Header\n        className=\"Container-Header\"\n        title={{\n          text: i18n(dictionary, currentLanguage, \"SITE_NAME\"),\n          modifiers: [[\"type\", \"headerTitle\"]],\n        }}\n      />\n      <NotFound className={className} modifiers={modifiers} />\n    </>\n  );\n}\n\nexport default NotFoundPage;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Footer.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\nimport { fetchLanguageDictionary } from \"../../store/actions/settingsActions\";\nimport i18n from \"../../utils/i18n\";\n\nfunction Footer(props) {\n  const blockName = \"Footer\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  const dispatch = useDispatch();\n  const onChangeCurrentLangClick = useCallback(\n    () => {\n      const newLanguage = currentLanguage === \"en\" ? \"ru\" : \"en\";\n      window.localStorage.setItem(\"shri_ci_lang\", newLanguage);\n      console.log(\n        \"footer change lang clicked, changing language to \",\n        newLanguage\n      );\n      dispatch(fetchLanguageDictionary(newLanguage, undefined, true));\n    },\n    // eslint-disable-next-line\n    [currentLanguage]\n  );\n\n  return (\n    <footer\n      className={`${className} ${blockName} ${processModifiers(\n        blockName,\n        modifiers\n      )}`}\n    >\n      <div className={`${blockName}-Content`}>\n        <div className={`${blockName}-LinksWrapper`}>\n          <Link\n            to=\"/support\"\n            className={`${blockName}-Link MyLink MyLink_type_footer`}\n          >\n            {i18n(dictionary, currentLanguage, \"SUPPORT\")}\n          </Link>\n          <Link\n            to=\"/learning\"\n            className={`${blockName}-Link MyLink MyLink_type_footer`}\n          >\n            {i18n(dictionary, currentLanguage, \"LEARNING\")}\n          </Link>\n          <div\n            className={`${blockName}-Link MyLink MyLink_type_footer`}\n            onClick={onChangeCurrentLangClick}\n          >\n            {i18n(dictionary, currentLanguage, \"CHANGE_LOCALE\")}\n          </div>\n        </div>\n        <div className={`${blockName}-Credentional Text Text_type_footer`}>\n          {i18n(dictionary, currentLanguage, \"COPYRIGHT\", { year: 2020 })}\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import constants from \"../../utils/constants\";\n\nconst defaultState = {\n  isInProgress: false,\n  isAppLoading: true,\n  isPopupActive: false,\n};\n\nexport default function (state = defaultState, action) {\n  switch (action.type) {\n    case constants.TOGGLE_PROGRESS:\n      return {\n        ...state,\n        isInProgress: action.payload,\n      };\n    case constants.APP_LOADING:\n      return {\n        ...state,\n        isAppLoading: action.payload,\n      };\n    case constants.POPUP:\n      return {\n        ...state,\n        isPopupActive: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getIsInProgress = (state) => state.common.isInProgress;\nexport const getIsAppLoading = (state) => state.common.isAppLoading;\nexport const getIsPopupActive = (state) => state.common.isPopupActive;\n","import React, { useRef } from \"react\";\nimport processModifiers from \"../../utils/processModifiers\";\nimport \"./Popup.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startNewBuild } from \"../../store/actions/buildsActions\";\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\nimport { togglePopup } from \"../../store/actions/commonActions\";\nimport i18n from \"../../utils/i18n\";\nimport {\n  getLanguageDictionary,\n  getCurrentLanguge,\n} from \"../../store/reducers/settingsReducer\";\n\nfunction Popup(props) {\n  const blockName = \"Form\";\n  const { className = \"\", modifiers = [] } = props;\n\n  const dictionary = useSelector(getLanguageDictionary);\n  const currentLanguage = useSelector(getCurrentLanguge);\n\n  const dispatch = useDispatch();\n\n  const commitHashRef = useRef(null);\n\n  const handleSubmit = async (event) => {\n    event && event.preventDefault();\n\n    const commitHash = commitHashRef.current.value.trim();\n    console.log(\"commitHash: \", commitHash);\n\n    dispatch(startNewBuild(commitHash));\n  };\n\n  const handleCancel = () => {\n    commitHashRef.current.value = \"\";\n    dispatch(togglePopup(false));\n  };\n\n  return (\n    <div className={`Popup-Wrapper`}>\n      <form\n        className={`Popup ${className} ${blockName} ${processModifiers(\n          blockName,\n          modifiers\n        )}`}\n        onSubmit={handleSubmit}\n      >\n        <div className={`${blockName}-Content`}>\n          <div className={`${blockName}-Header Text Text_type_popupHeader`}>\n            {i18n(dictionary, currentLanguage, \"NEW_BUILD\")}\n          </div>\n          <div className={`${blockName}-Item`}>\n            <Input\n              className={`${blockName}-Input`}\n              modifiers={[[\"clear\", \"visible\"]]}\n              labelBefore={{\n                text: \"NEW_BUILD_POPUP_DESCRIPTION\",\n                className: `${blockName}-Label`,\n                modifiers: [[\"type\", \"formLabel\"]],\n              }}\n              id=\"commit\"\n              type=\"text\"\n              placeholder={i18n(dictionary, currentLanguage, \"COMMIT_HASH\")}\n              pattern=\"\\S+\"\n              name=\"commit\"\n              required\n              value=\"\"\n              forwardRef={commitHashRef}\n            />\n          </div>\n          <div className={`${blockName}-Item`}>\n            <div className={`${blockName}-ButtonsBlock`}>\n              <Button\n                className={`${blockName}-Button`}\n                modifiers={[[\"color\", \"accent\"]]}\n                text={i18n(dictionary, currentLanguage, \"RUN_BUILD\")}\n                type=\"submit\"\n              />\n              <Button\n                type=\"button\"\n                className={`${blockName}-Button`}\n                modifiers={[[\"color\", \"transparent\"]]}\n                onClick={handleCancel}\n                text={i18n(dictionary, currentLanguage, \"CANCEL\")}\n              />\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Popup;\n","import React, { useEffect } from \"react\";\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport IndexPage from \"./pages/IndexPage/IndexPage\";\nimport SettingsPage from \"./pages/SettingsPage/SettingsPage\";\nimport BuildHistoryPage from \"./pages/BuildHistoryPage/BuildHistoryPage\";\nimport BuildDetailsPage from \"./pages/BuildDetailsPage/BuildDetailsPage\";\nimport NotFoundPage from \"./pages/NotFoundPage/NotFoundPage\";\nimport \"./styles/main.scss\";\n\nimport Footer from \"./components/Footer/Footer\";\nimport { getSettingsConfig } from \"./store/reducers/settingsReducer\";\nimport history from \"./history\";\nimport { fetchSettingsBeforeUsingApp } from \"./store/actions/settingsActions\";\nimport {\n  getIsAppLoading,\n  getIsPopupActive,\n  getIsInProgress,\n} from \"./store/reducers/commonReducer\";\nimport Loader from \"./components/Loader/Loader\";\nimport Popup from \"./components/Popup/Popup\";\n\nfunction App(props) {\n  const isFetching = useSelector(getIsAppLoading);\n  const isPopupActive = useSelector(getIsPopupActive);\n  const isInProgress = useSelector(getIsInProgress);\n  const settingsConfig = useSelector(getSettingsConfig);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchSettingsBeforeUsingApp());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const root = document.getElementById(\"root\");\n    if (isPopupActive) {\n      root.classList.add(\"Container_popup_active\");\n    } else {\n      root.classList.remove(\"Container_popup_active\");\n    }\n  }, [isPopupActive]);\n\n  useEffect(() => {\n    const root = document.getElementById(\"root\");\n    if (isInProgress) {\n      root.classList.add(\"Container_inactive\");\n    } else {\n      root.classList.remove(\"Container_inactive\");\n    }\n  }, [isInProgress]);\n\n  return (\n    <>\n      {isFetching ? (\n        <Loader />\n      ) : (\n        <Router history={history}>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() =>\n                settingsConfig.repoName ? (\n                  <BuildHistoryPage className=\"Container-Main\" />\n                ) : (\n                  <IndexPage className=\"Container-Main\" />\n                )\n              }\n            />\n            <Route\n              path=\"/build/:buildId\"\n              render={({ location }) =>\n                settingsConfig.repoName ? (\n                  <BuildDetailsPage className=\"Container-Main\" />\n                ) : (\n                  <Redirect to={{ pathname: \"/\", state: { from: location } }} />\n                )\n              }\n            />\n            <Route path=\"/settings\">\n              <SettingsPage className=\"Container-Main\" />\n            </Route>\n            <Route path=\"*\">\n              <NotFoundPage className=\"Container-Main\" />\n            </Route>\n          </Switch>\n\n          <Footer className=\"Container-Footer\" />\n          {isPopupActive && <Popup modifiers={[[\"popup\"]]} />}\n        </Router>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport constants from \"../../utils/constants\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <>\n          <Header\n            className=\"Container-Header\"\n            title={{\n              text: constants.SITE_NAME,\n              modifiers: [[\"type\", \"headerTitle\"]]\n            }}\n          />\n          <main className=\"Container-Main\">\n            Что-то пошло не так. Попробуйте обновить страницу.\n          </main>\n          <Footer className=\"Container-Footer\" />\n        </>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { combineReducers } from \"redux\";\nimport commonReducer from \"./commonReducer\";\nimport settingsReducer from \"./settingsReducer\";\nimport buildsReducer from \"./buildsReducer\";\n\nexport default combineReducers({\n  common: commonReducer,\n  settings: settingsReducer,\n  builds: buildsReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/index\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : (f) => f\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport ErrorBoundary from \"./components/ErrorBoundary/ErrorBoundary\";\nimport store from \"./store/store\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ErrorBoundary>\n        <App />\n      </ErrorBoundary>\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}